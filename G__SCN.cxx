//
// File generated by /cvmfs/csee.gsi.de/root/534-36/bin/rootcint at Thu Jul 12 17:00:16 2018

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME G__SCN
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__SCN.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void TSCNUnpackEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSCNUnpackEvent(void *p = 0);
   static void *newArray_TSCNUnpackEvent(Long_t size, void *p);
   static void delete_TSCNUnpackEvent(void *p);
   static void deleteArray_TSCNUnpackEvent(void *p);
   static void destruct_TSCNUnpackEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TSCNUnpackEvent*)
   {
      ::TSCNUnpackEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSCNUnpackEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSCNUnpackEvent", ::TSCNUnpackEvent::Class_Version(), "././TSCNUnpackEvent.h", 27,
                  typeid(::TSCNUnpackEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TSCNUnpackEvent::Dictionary, isa_proxy, 4,
                  sizeof(::TSCNUnpackEvent) );
      instance.SetNew(&new_TSCNUnpackEvent);
      instance.SetNewArray(&newArray_TSCNUnpackEvent);
      instance.SetDelete(&delete_TSCNUnpackEvent);
      instance.SetDeleteArray(&deleteArray_TSCNUnpackEvent);
      instance.SetDestructor(&destruct_TSCNUnpackEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TSCNUnpackEvent*)
   {
      return GenerateInitInstanceLocal((::TSCNUnpackEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSCNUnpackEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TSCNUnpackProc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSCNUnpackProc(void *p = 0);
   static void *newArray_TSCNUnpackProc(Long_t size, void *p);
   static void delete_TSCNUnpackProc(void *p);
   static void deleteArray_TSCNUnpackProc(void *p);
   static void destruct_TSCNUnpackProc(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TSCNUnpackProc*)
   {
      ::TSCNUnpackProc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSCNUnpackProc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSCNUnpackProc", ::TSCNUnpackProc::Class_Version(), "././First_Test.h", 62,
                  typeid(::TSCNUnpackProc), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TSCNUnpackProc::Dictionary, isa_proxy, 4,
                  sizeof(::TSCNUnpackProc) );
      instance.SetNew(&new_TSCNUnpackProc);
      instance.SetNewArray(&newArray_TSCNUnpackProc);
      instance.SetDelete(&delete_TSCNUnpackProc);
      instance.SetDeleteArray(&deleteArray_TSCNUnpackProc);
      instance.SetDestructor(&destruct_TSCNUnpackProc);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TSCNUnpackProc*)
   {
      return GenerateInitInstanceLocal((::TSCNUnpackProc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSCNUnpackProc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TSCNParameter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSCNParameter(void *p = 0);
   static void *newArray_TSCNParameter(Long_t size, void *p);
   static void delete_TSCNParameter(void *p);
   static void deleteArray_TSCNParameter(void *p);
   static void destruct_TSCNParameter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TSCNParameter*)
   {
      ::TSCNParameter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSCNParameter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSCNParameter", ::TSCNParameter::Class_Version(), "././TSCNParameter.h", 19,
                  typeid(::TSCNParameter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TSCNParameter::Dictionary, isa_proxy, 4,
                  sizeof(::TSCNParameter) );
      instance.SetNew(&new_TSCNParameter);
      instance.SetNewArray(&newArray_TSCNParameter);
      instance.SetDelete(&delete_TSCNParameter);
      instance.SetDeleteArray(&deleteArray_TSCNParameter);
      instance.SetDestructor(&destruct_TSCNParameter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TSCNParameter*)
   {
      return GenerateInitInstanceLocal((::TSCNParameter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSCNParameter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TSCNCalEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSCNCalEvent(void *p = 0);
   static void *newArray_TSCNCalEvent(Long_t size, void *p);
   static void delete_TSCNCalEvent(void *p);
   static void deleteArray_TSCNCalEvent(void *p);
   static void destruct_TSCNCalEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TSCNCalEvent*)
   {
      ::TSCNCalEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSCNCalEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSCNCalEvent", ::TSCNCalEvent::Class_Version(), "././TSCNCalEvent.h", 21,
                  typeid(::TSCNCalEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TSCNCalEvent::Dictionary, isa_proxy, 4,
                  sizeof(::TSCNCalEvent) );
      instance.SetNew(&new_TSCNCalEvent);
      instance.SetNewArray(&newArray_TSCNCalEvent);
      instance.SetDelete(&delete_TSCNCalEvent);
      instance.SetDeleteArray(&deleteArray_TSCNCalEvent);
      instance.SetDestructor(&destruct_TSCNCalEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TSCNCalEvent*)
   {
      return GenerateInitInstanceLocal((::TSCNCalEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSCNCalEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TSCNAnlEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSCNAnlEvent(void *p = 0);
   static void *newArray_TSCNAnlEvent(Long_t size, void *p);
   static void delete_TSCNAnlEvent(void *p);
   static void deleteArray_TSCNAnlEvent(void *p);
   static void destruct_TSCNAnlEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TSCNAnlEvent*)
   {
      ::TSCNAnlEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSCNAnlEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSCNAnlEvent", ::TSCNAnlEvent::Class_Version(), "././TSCNAnlEvent.h", 21,
                  typeid(::TSCNAnlEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TSCNAnlEvent::Dictionary, isa_proxy, 4,
                  sizeof(::TSCNAnlEvent) );
      instance.SetNew(&new_TSCNAnlEvent);
      instance.SetNewArray(&newArray_TSCNAnlEvent);
      instance.SetDelete(&delete_TSCNAnlEvent);
      instance.SetDeleteArray(&deleteArray_TSCNAnlEvent);
      instance.SetDestructor(&destruct_TSCNAnlEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TSCNAnlEvent*)
   {
      return GenerateInitInstanceLocal((::TSCNAnlEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSCNAnlEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TSCNAnalysis_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSCNAnalysis(void *p = 0);
   static void *newArray_TSCNAnalysis(Long_t size, void *p);
   static void delete_TSCNAnalysis(void *p);
   static void deleteArray_TSCNAnalysis(void *p);
   static void destruct_TSCNAnalysis(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TSCNAnalysis*)
   {
      ::TSCNAnalysis *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSCNAnalysis >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSCNAnalysis", ::TSCNAnalysis::Class_Version(), "././TSCNAnalysis.h", 27,
                  typeid(::TSCNAnalysis), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TSCNAnalysis::Dictionary, isa_proxy, 4,
                  sizeof(::TSCNAnalysis) );
      instance.SetNew(&new_TSCNAnalysis);
      instance.SetNewArray(&newArray_TSCNAnalysis);
      instance.SetDelete(&delete_TSCNAnalysis);
      instance.SetDeleteArray(&deleteArray_TSCNAnalysis);
      instance.SetDestructor(&destruct_TSCNAnalysis);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TSCNAnalysis*)
   {
      return GenerateInitInstanceLocal((::TSCNAnalysis*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSCNAnalysis*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TSCNAnlProc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSCNAnlProc(void *p = 0);
   static void *newArray_TSCNAnlProc(Long_t size, void *p);
   static void delete_TSCNAnlProc(void *p);
   static void deleteArray_TSCNAnlProc(void *p);
   static void destruct_TSCNAnlProc(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TSCNAnlProc*)
   {
      ::TSCNAnlProc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSCNAnlProc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSCNAnlProc", ::TSCNAnlProc::Class_Version(), "././TSCNAnlProc.h", 29,
                  typeid(::TSCNAnlProc), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TSCNAnlProc::Dictionary, isa_proxy, 4,
                  sizeof(::TSCNAnlProc) );
      instance.SetNew(&new_TSCNAnlProc);
      instance.SetNewArray(&newArray_TSCNAnlProc);
      instance.SetDelete(&delete_TSCNAnlProc);
      instance.SetDeleteArray(&deleteArray_TSCNAnlProc);
      instance.SetDestructor(&destruct_TSCNAnlProc);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TSCNAnlProc*)
   {
      return GenerateInitInstanceLocal((::TSCNAnlProc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSCNAnlProc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TSCNCalProc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSCNCalProc(void *p = 0);
   static void *newArray_TSCNCalProc(Long_t size, void *p);
   static void delete_TSCNCalProc(void *p);
   static void deleteArray_TSCNCalProc(void *p);
   static void destruct_TSCNCalProc(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TSCNCalProc*)
   {
      ::TSCNCalProc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSCNCalProc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSCNCalProc", ::TSCNCalProc::Class_Version(), "././TSCNCalProc.h", 26,
                  typeid(::TSCNCalProc), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TSCNCalProc::Dictionary, isa_proxy, 4,
                  sizeof(::TSCNCalProc) );
      instance.SetNew(&new_TSCNCalProc);
      instance.SetNewArray(&newArray_TSCNCalProc);
      instance.SetDelete(&delete_TSCNCalProc);
      instance.SetDeleteArray(&deleteArray_TSCNCalProc);
      instance.SetDestructor(&destruct_TSCNCalProc);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TSCNCalProc*)
   {
      return GenerateInitInstanceLocal((::TSCNCalProc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSCNCalProc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr TSCNUnpackEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSCNUnpackEvent::Class_Name()
{
   return "TSCNUnpackEvent";
}

//______________________________________________________________________________
const char *TSCNUnpackEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNUnpackEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSCNUnpackEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNUnpackEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSCNUnpackEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNUnpackEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSCNUnpackEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNUnpackEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TSCNUnpackProc::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSCNUnpackProc::Class_Name()
{
   return "TSCNUnpackProc";
}

//______________________________________________________________________________
const char *TSCNUnpackProc::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNUnpackProc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSCNUnpackProc::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNUnpackProc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSCNUnpackProc::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNUnpackProc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSCNUnpackProc::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNUnpackProc*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TSCNParameter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSCNParameter::Class_Name()
{
   return "TSCNParameter";
}

//______________________________________________________________________________
const char *TSCNParameter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNParameter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSCNParameter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNParameter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSCNParameter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNParameter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSCNParameter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNParameter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TSCNCalEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSCNCalEvent::Class_Name()
{
   return "TSCNCalEvent";
}

//______________________________________________________________________________
const char *TSCNCalEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNCalEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSCNCalEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNCalEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSCNCalEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNCalEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSCNCalEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNCalEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TSCNAnlEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSCNAnlEvent::Class_Name()
{
   return "TSCNAnlEvent";
}

//______________________________________________________________________________
const char *TSCNAnlEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNAnlEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSCNAnlEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNAnlEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSCNAnlEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNAnlEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSCNAnlEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNAnlEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TSCNAnalysis::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSCNAnalysis::Class_Name()
{
   return "TSCNAnalysis";
}

//______________________________________________________________________________
const char *TSCNAnalysis::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNAnalysis*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSCNAnalysis::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNAnalysis*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSCNAnalysis::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNAnalysis*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSCNAnalysis::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNAnalysis*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TSCNAnlProc::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSCNAnlProc::Class_Name()
{
   return "TSCNAnlProc";
}

//______________________________________________________________________________
const char *TSCNAnlProc::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNAnlProc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSCNAnlProc::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNAnlProc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSCNAnlProc::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNAnlProc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSCNAnlProc::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNAnlProc*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TSCNCalProc::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSCNCalProc::Class_Name()
{
   return "TSCNCalProc";
}

//______________________________________________________________________________
const char *TSCNCalProc::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNCalProc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSCNCalProc::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNCalProc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSCNCalProc::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNCalProc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSCNCalProc::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNCalProc*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void TSCNParameter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSCNParameter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSCNParameter::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSCNParameter::Class(),this);
   }
}

//______________________________________________________________________________
void TSCNParameter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSCNParameter.
      TClass *R__cl = ::TSCNParameter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pedestals[32]", Pedestals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Factors[32]", Factors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "peak_alg", &peak_alg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Anodes_Low", &Anodes_Low);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Anodes_High", &Anodes_High);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QDC2Ch0_Low", &QDC2Ch0_Low);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QDC2Ch0_High", &QDC2Ch0_High);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QDC2Ch1_Low", &QDC2Ch1_Low);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QDC2Ch1_High", &QDC2Ch1_High);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ClusterCh0_Low", &ClusterCh0_Low);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ClusterCh0_High", &ClusterCh0_High);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NaI_F", &NaI_F);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cluster_F", &Cluster_F);
      TGo4Parameter::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TSCNParameter(void *p) {
      return  p ? new(p) ::TSCNParameter : new ::TSCNParameter;
   }
   static void *newArray_TSCNParameter(Long_t nElements, void *p) {
      return p ? new(p) ::TSCNParameter[nElements] : new ::TSCNParameter[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSCNParameter(void *p) {
      delete ((::TSCNParameter*)p);
   }
   static void deleteArray_TSCNParameter(void *p) {
      delete [] ((::TSCNParameter*)p);
   }
   static void destruct_TSCNParameter(void *p) {
      typedef ::TSCNParameter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TSCNParameter

//______________________________________________________________________________
void TSCNAnalysis::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSCNAnalysis.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSCNAnalysis::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSCNAnalysis::Class(),this);
   }
}

//______________________________________________________________________________
void TSCNAnalysis::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSCNAnalysis.
      TClass *R__cl = ::TSCNAnalysis::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMbsEvent", &fMbsEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRawEvent", &fRawEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCalEvent", &fCalEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAnlEvent", &fAnlEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPar", &fPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvents", &fEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastEvent", &fLastEvent);
      TGo4Analysis::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TSCNAnalysis(void *p) {
      return  p ? new(p) ::TSCNAnalysis : new ::TSCNAnalysis;
   }
   static void *newArray_TSCNAnalysis(Long_t nElements, void *p) {
      return p ? new(p) ::TSCNAnalysis[nElements] : new ::TSCNAnalysis[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSCNAnalysis(void *p) {
      delete ((::TSCNAnalysis*)p);
   }
   static void deleteArray_TSCNAnalysis(void *p) {
      delete [] ((::TSCNAnalysis*)p);
   }
   static void destruct_TSCNAnalysis(void *p) {
      typedef ::TSCNAnalysis current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TSCNAnalysis

//______________________________________________________________________________
void TSCNUnpackEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSCNUnpackEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSCNUnpackEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSCNUnpackEvent::Class(),this);
   }
}

//______________________________________________________________________________
void TSCNUnpackEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSCNUnpackEvent.
      TClass *R__cl = ::TSCNUnpackEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fiCrate1[36]", fiCrate1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fiCrate2[36]", fiCrate2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fiCrate3[36]", fiCrate3);
      TGo4EventElement::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TSCNUnpackEvent(void *p) {
      return  p ? new(p) ::TSCNUnpackEvent : new ::TSCNUnpackEvent;
   }
   static void *newArray_TSCNUnpackEvent(Long_t nElements, void *p) {
      return p ? new(p) ::TSCNUnpackEvent[nElements] : new ::TSCNUnpackEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSCNUnpackEvent(void *p) {
      delete ((::TSCNUnpackEvent*)p);
   }
   static void deleteArray_TSCNUnpackEvent(void *p) {
      delete [] ((::TSCNUnpackEvent*)p);
   }
   static void destruct_TSCNUnpackEvent(void *p) {
      typedef ::TSCNUnpackEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TSCNUnpackEvent

//______________________________________________________________________________
void TSCNUnpackProc::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSCNUnpackProc.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSCNUnpackProc::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSCNUnpackProc::Class(),this);
   }
}

//______________________________________________________________________________
void TSCNUnpackProc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSCNUnpackProc.
      TClass *R__cl = ::TSCNUnpackProc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FAT_E", &FAT_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FAT_MAT", &FAT_MAT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hit_mat", &hit_mat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*WR_HIST", &WR_HIST);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*WR_HIST2", &WR_HIST2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*C_t", &C_t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tamex_Mult_lead", &tamex_Mult_lead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tamex_Mult_trail", &tamex_Mult_trail);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mat", &mat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*all", &all);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*all2", &all2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hit_hist", &hit_hist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*am_hits", &am_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tdc_hist", &tdc_hist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*WR_F", &WR_F);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Coarse", &Coarse);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DIFF_ARR", &DIFF_ARR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tamex_Mult_Ch_lead", &tamex_Mult_Ch_lead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tamex_Mult_Ch_trail", &tamex_Mult_Ch_trail);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tamex_mult_mat_lead", &tamex_mult_mat_lead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tamex_mult_mat_trail", &tamex_mult_mat_trail);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Trail_LEAD", &Trail_LEAD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*LEAD_LEAD", &LEAD_LEAD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GAL_Pileup", &GAL_Pileup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GAL_Hit_Pat", &GAL_Hit_Pat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GAL_Chan_Time_Diff", &GAL_Chan_Time_Diff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GAL_Chan_E", &GAL_Chan_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GAL_Chan_E_Mat", &GAL_Chan_E_Mat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ffill", &ffill);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fshift", &fshift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "White_Rabbbit_old", &White_Rabbbit_old);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PrcID_Array[10]", PrcID_Array);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Used_Systems[10]", Used_Systems);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vals[100000]", vals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "val_it", &val_it);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cals_done", &cals_done);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "WR_used", &WR_used);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FAT_gain_match_used", &FAT_gain_match_used);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FAT_gain_match_done", &FAT_gain_match_done);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "file_pwd", &file_pwd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "file_end", &file_end);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gain_match_filename", (void*)&gain_match_filename);
      R__insp.InspectMember("string", (void*)&gain_match_filename, "gain_match_filename.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Detector_Systems", &Detector_Systems);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*data_stream", &data_stream);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*WR", &WR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*RAW", &RAW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fatima_E_save[4]", fatima_E_save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "am_FATIMA_hits", &am_FATIMA_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "am_GALILEO_hits", &am_GALILEO_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "count", &count);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "called[2]", called);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iterator", &iterator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "WR_tmp[2]", WR_tmp);
      TGo4EventProcessor::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TSCNUnpackProc(void *p) {
      return  p ? new(p) ::TSCNUnpackProc : new ::TSCNUnpackProc;
   }
   static void *newArray_TSCNUnpackProc(Long_t nElements, void *p) {
      return p ? new(p) ::TSCNUnpackProc[nElements] : new ::TSCNUnpackProc[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSCNUnpackProc(void *p) {
      delete ((::TSCNUnpackProc*)p);
   }
   static void deleteArray_TSCNUnpackProc(void *p) {
      delete [] ((::TSCNUnpackProc*)p);
   }
   static void destruct_TSCNUnpackProc(void *p) {
      typedef ::TSCNUnpackProc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TSCNUnpackProc

//______________________________________________________________________________
void TSCNCalEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSCNCalEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSCNCalEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSCNCalEvent::Class(),this);
   }
}

//______________________________________________________________________________
void TSCNCalEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSCNCalEvent.
      TClass *R__cl = ::TSCNCalEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "frDataC1[36]", frDataC1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "frDataC2[36]", frDataC2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "frDataC3[36]", frDataC3);
      TGo4EventElement::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TSCNCalEvent(void *p) {
      return  p ? new(p) ::TSCNCalEvent : new ::TSCNCalEvent;
   }
   static void *newArray_TSCNCalEvent(Long_t nElements, void *p) {
      return p ? new(p) ::TSCNCalEvent[nElements] : new ::TSCNCalEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSCNCalEvent(void *p) {
      delete ((::TSCNCalEvent*)p);
   }
   static void deleteArray_TSCNCalEvent(void *p) {
      delete [] ((::TSCNCalEvent*)p);
   }
   static void destruct_TSCNCalEvent(void *p) {
      typedef ::TSCNCalEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TSCNCalEvent

//______________________________________________________________________________
void TSCNCalProc::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSCNCalProc.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSCNCalProc::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSCNCalProc::Class(),this);
   }
}

//______________________________________________________________________________
void TSCNCalProc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSCNCalProc.
      TClass *R__cl = ::TSCNCalProc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fQDC1Ch[36]", &fQDC1Ch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Sum", &Sum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParam1", &fParam1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*picPMT", &picPMT);
      TGo4EventProcessor::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TSCNCalProc(void *p) {
      return  p ? new(p) ::TSCNCalProc : new ::TSCNCalProc;
   }
   static void *newArray_TSCNCalProc(Long_t nElements, void *p) {
      return p ? new(p) ::TSCNCalProc[nElements] : new ::TSCNCalProc[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSCNCalProc(void *p) {
      delete ((::TSCNCalProc*)p);
   }
   static void deleteArray_TSCNCalProc(void *p) {
      delete [] ((::TSCNCalProc*)p);
   }
   static void destruct_TSCNCalProc(void *p) {
      typedef ::TSCNCalProc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TSCNCalProc

//______________________________________________________________________________
void TSCNAnlEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSCNAnlEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSCNAnlEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSCNAnlEvent::Class(),this);
   }
}

//______________________________________________________________________________
void TSCNAnlEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSCNAnlEvent.
      TClass *R__cl = ::TSCNAnlEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Data1[36]", Data1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Data2[36]", Data2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Data3[36]", Data3);
      TGo4EventElement::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TSCNAnlEvent(void *p) {
      return  p ? new(p) ::TSCNAnlEvent : new ::TSCNAnlEvent;
   }
   static void *newArray_TSCNAnlEvent(Long_t nElements, void *p) {
      return p ? new(p) ::TSCNAnlEvent[nElements] : new ::TSCNAnlEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSCNAnlEvent(void *p) {
      delete ((::TSCNAnlEvent*)p);
   }
   static void deleteArray_TSCNAnlEvent(void *p) {
      delete [] ((::TSCNAnlEvent*)p);
   }
   static void destruct_TSCNAnlEvent(void *p) {
      typedef ::TSCNAnlEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TSCNAnlEvent

//______________________________________________________________________________
void TSCNAnlProc::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSCNAnlProc.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSCNAnlProc::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSCNAnlProc::Class(),this);
   }
}

//______________________________________________________________________________
void TSCNAnlProc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSCNAnlProc.
      TClass *R__cl = ::TSCNAnlProc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTimeDiff", &fTimeDiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGatedHist", &fGatedHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fconHis1", &fconHis1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWinCon1", &fWinCon1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*XAnodes", &XAnodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*YAnodes", &YAnodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParam1", &fParam1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*QSpectrum", &QSpectrum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCoincQ1A1", &fCoincQ1A1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCoincQ1T1", &fCoincQ1T1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MatrixCond", &MatrixCond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MatrixCluster", &MatrixCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Refx", &Refx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Refy", &Refy);
      TGo4EventProcessor::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TSCNAnlProc(void *p) {
      return  p ? new(p) ::TSCNAnlProc : new ::TSCNAnlProc;
   }
   static void *newArray_TSCNAnlProc(Long_t nElements, void *p) {
      return p ? new(p) ::TSCNAnlProc[nElements] : new ::TSCNAnlProc[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSCNAnlProc(void *p) {
      delete ((::TSCNAnlProc*)p);
   }
   static void deleteArray_TSCNAnlProc(void *p) {
      delete [] ((::TSCNAnlProc*)p);
   }
   static void destruct_TSCNAnlProc(void *p) {
      typedef ::TSCNAnlProc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TSCNAnlProc

/********************************************************
* G__SCN.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__SCN();

extern "C" void G__set_cpp_environmentG__SCN() {
  G__cpp_reset_tagtableG__SCN();
}
#include <new>
extern "C" int G__cpp_dllrevG__SCN() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TSCNUnpackEvent */
static int G__G__SCN_678_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNUnpackEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNUnpackEvent[n];
     } else {
       p = new((void*) gvp) TSCNUnpackEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNUnpackEvent;
     } else {
       p = new((void*) gvp) TSCNUnpackEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_678_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNUnpackEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSCNUnpackEvent((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSCNUnpackEvent((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_678_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSCNUnpackEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_678_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNUnpackEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_678_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSCNUnpackEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_678_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSCNUnpackEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_678_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSCNUnpackEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_678_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNUnpackEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_678_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNUnpackEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_678_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNUnpackEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_678_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNUnpackEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_678_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSCNUnpackEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSCNUnpackEvent(*(TSCNUnpackEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSCNUnpackEvent G__TTSCNUnpackEvent;
static int G__G__SCN_678_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSCNUnpackEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSCNUnpackEvent*) (soff+(sizeof(TSCNUnpackEvent)*i)))->~G__TTSCNUnpackEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSCNUnpackEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSCNUnpackEvent*) (soff))->~G__TTSCNUnpackEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SCN_678_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNUnpackEvent* dest = (TSCNUnpackEvent*) G__getstructoffset();
   *dest = *(TSCNUnpackEvent*) libp->para[0].ref;
   const TSCNUnpackEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSCNUnpackProc */
static int G__G__SCN_716_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNUnpackProc* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNUnpackProc[n];
     } else {
       p = new((void*) gvp) TSCNUnpackProc[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNUnpackProc;
     } else {
       p = new((void*) gvp) TSCNUnpackProc;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_716_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNUnpackProc* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSCNUnpackProc((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSCNUnpackProc((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_716_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSCNUnpackProc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_716_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNUnpackProc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_716_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSCNUnpackProc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_716_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSCNUnpackProc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_716_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSCNUnpackProc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_716_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNUnpackProc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_716_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNUnpackProc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_716_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNUnpackProc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_716_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNUnpackProc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_716_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSCNUnpackProc* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSCNUnpackProc(*(TSCNUnpackProc*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSCNUnpackProc G__TTSCNUnpackProc;
static int G__G__SCN_716_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSCNUnpackProc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSCNUnpackProc*) (soff+(sizeof(TSCNUnpackProc)*i)))->~G__TTSCNUnpackProc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSCNUnpackProc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSCNUnpackProc*) (soff))->~G__TTSCNUnpackProc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SCN_716_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNUnpackProc* dest = (TSCNUnpackProc*) G__getstructoffset();
   *dest = *(TSCNUnpackProc*) libp->para[0].ref;
   const TSCNUnpackProc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSCNParameter */
static int G__G__SCN_786_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNParameter* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNParameter((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TSCNParameter((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TSCNParameter[n];
       } else {
         p = new((void*) gvp) TSCNParameter[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TSCNParameter;
       } else {
         p = new((void*) gvp) TSCNParameter;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_786_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSCNParameter*) G__getstructoffset())->SetPedestal((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_786_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSCNParameter*) G__getstructoffset())->SetFactor((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_786_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSCNParameter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_786_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNParameter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_786_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSCNParameter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_786_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSCNParameter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_786_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSCNParameter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_786_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNParameter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_786_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNParameter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_786_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNParameter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_786_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNParameter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_786_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSCNParameter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSCNParameter(*(TSCNParameter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSCNParameter G__TTSCNParameter;
static int G__G__SCN_786_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSCNParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSCNParameter*) (soff+(sizeof(TSCNParameter)*i)))->~G__TTSCNParameter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSCNParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSCNParameter*) (soff))->~G__TTSCNParameter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SCN_786_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNParameter* dest = (TSCNParameter*) G__getstructoffset();
   *dest = *(TSCNParameter*) libp->para[0].ref;
   const TSCNParameter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSCNCalEvent */
static int G__G__SCN_787_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNCalEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNCalEvent[n];
     } else {
       p = new((void*) gvp) TSCNCalEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNCalEvent;
     } else {
       p = new((void*) gvp) TSCNCalEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_787_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNCalEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSCNCalEvent((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSCNCalEvent((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_787_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSCNCalEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_787_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNCalEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_787_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSCNCalEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_787_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSCNCalEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_787_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSCNCalEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_787_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNCalEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_787_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNCalEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_787_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNCalEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_787_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNCalEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_787_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSCNCalEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSCNCalEvent(*(TSCNCalEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSCNCalEvent G__TTSCNCalEvent;
static int G__G__SCN_787_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSCNCalEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSCNCalEvent*) (soff+(sizeof(TSCNCalEvent)*i)))->~G__TTSCNCalEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSCNCalEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSCNCalEvent*) (soff))->~G__TTSCNCalEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SCN_787_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNCalEvent* dest = (TSCNCalEvent*) G__getstructoffset();
   *dest = *(TSCNCalEvent*) libp->para[0].ref;
   const TSCNCalEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSCNAnlEvent */
static int G__G__SCN_788_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNAnlEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNAnlEvent[n];
     } else {
       p = new((void*) gvp) TSCNAnlEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNAnlEvent;
     } else {
       p = new((void*) gvp) TSCNAnlEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_788_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNAnlEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSCNAnlEvent((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSCNAnlEvent((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_788_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSCNAnlEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_788_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNAnlEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_788_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSCNAnlEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_788_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSCNAnlEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_788_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSCNAnlEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_788_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNAnlEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_788_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNAnlEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_788_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNAnlEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_788_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNAnlEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_788_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSCNAnlEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSCNAnlEvent(*(TSCNAnlEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSCNAnlEvent G__TTSCNAnlEvent;
static int G__G__SCN_788_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSCNAnlEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSCNAnlEvent*) (soff+(sizeof(TSCNAnlEvent)*i)))->~G__TTSCNAnlEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSCNAnlEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSCNAnlEvent*) (soff))->~G__TTSCNAnlEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SCN_788_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNAnlEvent* dest = (TSCNAnlEvent*) G__getstructoffset();
   *dest = *(TSCNAnlEvent*) libp->para[0].ref;
   const TSCNAnlEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSCNAnalysis */
static int G__G__SCN_789_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNAnalysis* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNAnalysis[n];
     } else {
       p = new((void*) gvp) TSCNAnalysis[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNAnalysis;
     } else {
       p = new((void*) gvp) TSCNAnalysis;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_789_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNAnalysis* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSCNAnalysis((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TSCNAnalysis((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_789_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSCNAnalysis::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_789_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNAnalysis::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_789_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSCNAnalysis::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_789_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSCNAnalysis::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_789_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSCNAnalysis*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_789_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNAnalysis::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_789_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNAnalysis::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_789_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNAnalysis::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_789_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNAnalysis::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_789_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSCNAnalysis* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSCNAnalysis(*(TSCNAnalysis*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSCNAnalysis G__TTSCNAnalysis;
static int G__G__SCN_789_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSCNAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSCNAnalysis*) (soff+(sizeof(TSCNAnalysis)*i)))->~G__TTSCNAnalysis();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSCNAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSCNAnalysis*) (soff))->~G__TTSCNAnalysis();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SCN_789_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNAnalysis* dest = (TSCNAnalysis*) G__getstructoffset();
   *dest = *(TSCNAnalysis*) libp->para[0].ref;
   const TSCNAnalysis& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSCNAnlProc */
static int G__G__SCN_790_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNAnlProc* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNAnlProc[n];
     } else {
       p = new((void*) gvp) TSCNAnlProc[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNAnlProc;
     } else {
       p = new((void*) gvp) TSCNAnlProc;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_790_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNAnlProc* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSCNAnlProc((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSCNAnlProc((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_790_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSCNAnlProc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_790_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNAnlProc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_790_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSCNAnlProc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_790_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSCNAnlProc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_790_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSCNAnlProc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_790_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNAnlProc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_790_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNAnlProc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_790_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNAnlProc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_790_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNAnlProc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_790_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSCNAnlProc* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSCNAnlProc(*(TSCNAnlProc*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSCNAnlProc G__TTSCNAnlProc;
static int G__G__SCN_790_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSCNAnlProc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSCNAnlProc*) (soff+(sizeof(TSCNAnlProc)*i)))->~G__TTSCNAnlProc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSCNAnlProc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSCNAnlProc*) (soff))->~G__TTSCNAnlProc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SCN_790_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNAnlProc* dest = (TSCNAnlProc*) G__getstructoffset();
   *dest = *(TSCNAnlProc*) libp->para[0].ref;
   const TSCNAnlProc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSCNCalProc */
static int G__G__SCN_791_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNCalProc* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNCalProc[n];
     } else {
       p = new((void*) gvp) TSCNCalProc[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNCalProc;
     } else {
       p = new((void*) gvp) TSCNCalProc;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_791_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNCalProc* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSCNCalProc((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSCNCalProc((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_791_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSCNCalProc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_791_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNCalProc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_791_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSCNCalProc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_791_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSCNCalProc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_791_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSCNCalProc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_791_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNCalProc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_791_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNCalProc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_791_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNCalProc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_791_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNCalProc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_791_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSCNCalProc* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSCNCalProc(*(TSCNCalProc*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSCNCalProc G__TTSCNCalProc;
static int G__G__SCN_791_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSCNCalProc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSCNCalProc*) (soff+(sizeof(TSCNCalProc)*i)))->~G__TTSCNCalProc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSCNCalProc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSCNCalProc*) (soff))->~G__TTSCNCalProc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SCN_791_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNCalProc* dest = (TSCNCalProc*) G__getstructoffset();
   *dest = *(TSCNCalProc*) libp->para[0].ref;
   const TSCNCalProc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TSCNUnpackEvent */

/* TSCNUnpackProc */

/* TSCNParameter */

/* TSCNCalEvent */

/* TSCNAnlEvent */

/* TSCNAnalysis */

/* TSCNAnlProc */

/* TSCNCalProc */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__SCN {
 public:
  G__Sizep2memfuncG__SCN(): p(&G__Sizep2memfuncG__SCN::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__SCN::*p)();
};

size_t G__get_sizep2memfuncG__SCN()
{
  G__Sizep2memfuncG__SCN a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__SCN() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent))) {
     TSCNUnpackEvent *G__Lderived;
     G__Lderived=(TSCNUnpackEvent*)0x1000;
     {
       TGo4EventElement *G__Lpbase=(TGo4EventElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent),G__get_linked_tagnum(&G__G__SCNLN_TGo4EventElement),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent),G__get_linked_tagnum(&G__G__SCNLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc))) {
     TSCNUnpackProc *G__Lderived;
     G__Lderived=(TSCNUnpackProc*)0x1000;
     {
       TGo4EventProcessor *G__Lpbase=(TGo4EventProcessor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc),G__get_linked_tagnum(&G__G__SCNLN_TGo4EventProcessor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGo4EventSource *G__Lpbase=(TGo4EventSource*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc),G__get_linked_tagnum(&G__G__SCNLN_TGo4EventSource),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc),G__get_linked_tagnum(&G__G__SCNLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter))) {
     TSCNParameter *G__Lderived;
     G__Lderived=(TSCNParameter*)0x1000;
     {
       TGo4Parameter *G__Lpbase=(TGo4Parameter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter),G__get_linked_tagnum(&G__G__SCNLN_TGo4Parameter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter),G__get_linked_tagnum(&G__G__SCNLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent))) {
     TSCNCalEvent *G__Lderived;
     G__Lderived=(TSCNCalEvent*)0x1000;
     {
       TGo4EventElement *G__Lpbase=(TGo4EventElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent),G__get_linked_tagnum(&G__G__SCNLN_TGo4EventElement),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent),G__get_linked_tagnum(&G__G__SCNLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent))) {
     TSCNAnlEvent *G__Lderived;
     G__Lderived=(TSCNAnlEvent*)0x1000;
     {
       TGo4EventElement *G__Lpbase=(TGo4EventElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent),G__get_linked_tagnum(&G__G__SCNLN_TGo4EventElement),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent),G__get_linked_tagnum(&G__G__SCNLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis))) {
     TSCNAnalysis *G__Lderived;
     G__Lderived=(TSCNAnalysis*)0x1000;
     {
       TGo4Analysis *G__Lpbase=(TGo4Analysis*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis),G__get_linked_tagnum(&G__G__SCNLN_TGo4Analysis),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGo4CommandReceiver *G__Lpbase=(TGo4CommandReceiver*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis),G__get_linked_tagnum(&G__G__SCNLN_TGo4CommandReceiver),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc))) {
     TSCNAnlProc *G__Lderived;
     G__Lderived=(TSCNAnlProc*)0x1000;
     {
       TGo4EventProcessor *G__Lpbase=(TGo4EventProcessor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc),G__get_linked_tagnum(&G__G__SCNLN_TGo4EventProcessor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGo4EventSource *G__Lpbase=(TGo4EventSource*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc),G__get_linked_tagnum(&G__G__SCNLN_TGo4EventSource),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc),G__get_linked_tagnum(&G__G__SCNLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc))) {
     TSCNCalProc *G__Lderived;
     G__Lderived=(TSCNCalProc*)0x1000;
     {
       TGo4EventProcessor *G__Lpbase=(TGo4EventProcessor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc),G__get_linked_tagnum(&G__G__SCNLN_TGo4EventProcessor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGo4EventSource *G__Lpbase=(TGo4EventSource*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc),G__get_linked_tagnum(&G__G__SCNLN_TGo4EventSource),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc),G__get_linked_tagnum(&G__G__SCNLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__SCN() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__SCNLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__SCNLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__SCNLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__SCNLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__SCNLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__SCNLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__SCNLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__SCNLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__SCNLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__SCNLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__SCNLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__SCNLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__SCNLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__SCNLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__SCNLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__SCNLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__SCNLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__SCNLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__SCNLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__SCNLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__SCNLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__SCNLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__SCNLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::pair<int,int>,int>",117,G__get_linked_tagnum(&G__G__SCNLN_maplEpairlEintcOintgRcOintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,int>,int>",117,G__get_linked_tagnum(&G__G__SCNLN_maplEpairlEintcOintgRcOintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,int>,int>",117,G__get_linked_tagnum(&G__G__SCNLN_maplEpairlEintcOintgRcOintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,int>,int,less<pair<int,int> > >",117,G__get_linked_tagnum(&G__G__SCNLN_maplEpairlEintcOintgRcOintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TSCNUnpackEvent */
static void G__setup_memvarTSCNUnpackEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent));
   { TSCNUnpackEvent *p; p=(TSCNUnpackEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fiCrate1)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fiCrate1[36]=",0,"This two are for the QDC's ");
   G__memvar_setup((void*)((long)(&p->fiCrate2)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fiCrate2[36]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fiCrate3)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fiCrate3[36]=",0,"For TDC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSCNUnpackProc */
static void G__setup_memvarTSCNUnpackProc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc));
   { TSCNUnpackProc *p; p=(TSCNUnpackProc*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"FAT_E=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH2),-1,-1,2,"FAT_MAT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH2),-1,-1,2,"hit_mat=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"WR_HIST=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"WR_HIST2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"C_t=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"tamex_Mult_lead=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"tamex_Mult_trail=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"mat=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"all=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"all2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hit_hist=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"am_hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"tdc_hist=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"WR_F=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"Coarse=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"DIFF_ARR=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"tamex_Mult_Ch_lead=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"tamex_Mult_Ch_trail=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__SCNLN_TH2),-1,-1,2,"tamex_mult_mat_lead=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__SCNLN_TH2),-1,-1,2,"tamex_mult_mat_trail=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"Trail_LEAD=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,4,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"LEAD_LEAD=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"GAL_Pileup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"GAL_Hit_Pat=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"GAL_Chan_Time_Diff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"GAL_Chan_E=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH2),-1,-1,2,"GAL_Chan_E_Mat=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"ffill=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fshift=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"White_Rabbbit_old=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"PrcID_Array[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"Used_Systems[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"vals[100000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"val_it=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"cals_done=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"WR_used=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"FAT_gain_match_used=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"FAT_gain_match_done=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"file_pwd=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"file_end=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__SCNLN_string),-1,-1,4,"gain_match_filename=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__SCNLN_Detector_System),-1,-1,4,"Detector_Systems=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__SCNLN_Data_Stream),-1,-1,4,"data_stream=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_White_Rabbit),-1,-1,4,"WR=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_Raw_Event),-1,-1,4,"RAW=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fatima_E_save[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"am_FATIMA_hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"am_GALILEO_hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"count=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"called[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"iterator=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"WR_tmp[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSCNParameter */
static void G__setup_memvarTSCNParameter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter));
   { TSCNParameter *p; p=(TSCNParameter*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Pedestals)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Pedestals[32]=",0,"Pedestals ");
   G__memvar_setup((void*)((long)(&p->Factors)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Factors[32]=",0,"Gain  factors");
   G__memvar_setup((void*)((long)(&p->peak_alg)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"peak_alg=",0,"0 for centroid, 1 for Lerche");
   G__memvar_setup((void*)((long)(&p->Anodes_Low)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Anodes_Low=",0,"Lower treshold for anodes sum");
   G__memvar_setup((void*)((long)(&p->Anodes_High)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Anodes_High=",0,"Upper treshold for anodes sum");
   G__memvar_setup((void*)((long)(&p->QDC2Ch0_Low)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"QDC2Ch0_Low=",0,"Lower treshhold for qdc2 chan. 1");
   G__memvar_setup((void*)((long)(&p->QDC2Ch0_High)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"QDC2Ch0_High=",0,"Upper treshhold for qdc2 chan. 1");
   G__memvar_setup((void*)((long)(&p->QDC2Ch1_Low)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"QDC2Ch1_Low=",0,"Lower treshhold for qdc2 chan. 2");
   G__memvar_setup((void*)((long)(&p->QDC2Ch1_High)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"QDC2Ch1_High=",0,"Upper treshhold for qdc2 chan. 2");
   G__memvar_setup((void*)((long)(&p->ClusterCh0_Low)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ClusterCh0_Low=",0,"Lower treshhold for cluster chan. 1");
   G__memvar_setup((void*)((long)(&p->ClusterCh0_High)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ClusterCh0_High=",0,"Upper treshhold for cluster chan. 1");
   G__memvar_setup((void*)((long)(&p->NaI_F)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"NaI_F=",0,"If I have NaI detectors");
   G__memvar_setup((void*)((long)(&p->Cluster_F)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"Cluster_F=",0,"If I have the cluster");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSCNCalEvent */
static void G__setup_memvarTSCNCalEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent));
   { TSCNCalEvent *p; p=(TSCNCalEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->frDataC1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"frDataC1[36]=",0,"For QDC 1");
   G__memvar_setup((void*)((long)(&p->frDataC2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"frDataC2[36]=",0,"For QDC 2");
   G__memvar_setup((void*)((long)(&p->frDataC3)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"frDataC3[36]=",0,"For TDC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSCNAnlEvent */
static void G__setup_memvarTSCNAnlEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent));
   { TSCNAnlEvent *p; p=(TSCNAnlEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Data1)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Data1[36]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Data2)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Data2[36]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Data3)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Data3[36]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSCNAnalysis */
static void G__setup_memvarTSCNAnalysis(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis));
   { TSCNAnalysis *p; p=(TSCNAnalysis*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TGo4MbsEvent),-1,-1,4,"fMbsEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent),-1,-1,4,"fRawEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent),-1,-1,4,"fCalEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent),-1,-1,4,"fAnlEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter),-1,-1,4,"fPar=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLastEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSCNAnlProc */
static void G__setup_memvarTSCNAnlProc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc));
   { TSCNAnlProc *p; p=(TSCNAnlProc*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fTimeDiff)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,1,"fTimeDiff=",0,"/ Time difference Histogram from TDC channels");
   G__memvar_setup((void*)((long)(&p->fGatedHist)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,1,"fGatedHist=",0,"/ Time difference Histogram from TDC channels");
   G__memvar_setup((void*)((long)(&p->fconHis1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TGo4WinCond),-1,-1,1,"fconHis1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fWinCon1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TGo4WinCond),-1,-1,1,"fWinCon1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->XAnodes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,1,"XAnodes=",0,"! Charge for the x anodes");
   G__memvar_setup((void*)((long)(&p->YAnodes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,1,"YAnodes=",0,"! Charge for the y andes");
   G__memvar_setup((void*)((long)(&p->fParam1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter),-1,-1,1,"fParam1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->QSpectrum)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TGo4Picture),-1,-1,1,"QSpectrum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCoincQ1A1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH2),-1,-1,1,"fCoincQ1A1=",0,"Coincidences with germaniun ");
   G__memvar_setup((void*)((long)(&p->fCoincQ1T1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH2),-1,-1,1,"fCoincQ1T1=",0,"Coincidences with germaniun ");
   G__memvar_setup((void*)((long)(&p->MatrixCond)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH2),-1,-1,1,"MatrixCond=",0,"!Position matrix + conditions ");
   G__memvar_setup((void*)((long)(&p->MatrixCluster)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH2),-1,-1,1,"MatrixCluster=",0,"!Position matrix + conditions ");
   G__memvar_setup((void*)((long)(&p->Refx)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1D),-1,-1,1,"Refx=",0,"Reference histogram for X anodes");
   G__memvar_setup((void*)((long)(&p->Refy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1D),-1,-1,1,"Refy=",0,"Reference histogram for Y anodes");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSCNCalProc */
static void G__setup_memvarTSCNCalProc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc));
   { TSCNCalProc *p; p=(TSCNCalProc*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fQDC1Ch)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,1,"fQDC1Ch[36]=",0,"The calibrated histograms");
   G__memvar_setup((void*)((long)(&p->Sum)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,1,"Sum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fParam1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter),-1,-1,1,"fParam1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->picPMT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TGo4Picture),-1,-1,1,"picPMT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__SCN() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTSCNUnpackEvent(void) {
   /* TSCNUnpackEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent));
   G__memfunc_setup("TSCNUnpackEvent",1436,G__G__SCN_678_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSCNUnpackEvent",1436,G__G__SCN_678_0_2, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SCN_678_0_4, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSCNUnpackEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_678_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNUnpackEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_678_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSCNUnpackEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_678_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSCNUnpackEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_678_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_678_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNUnpackEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_678_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNUnpackEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_678_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNUnpackEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_678_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNUnpackEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSCNUnpackEvent", 1436, G__G__SCN_678_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent), -1, 0, 1, 1, 1, 0, "u 'TSCNUnpackEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSCNUnpackEvent", 1562, G__G__SCN_678_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SCN_678_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent), -1, 1, 1, 1, 1, 0, "u 'TSCNUnpackEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSCNUnpackProc(void) {
   /* TSCNUnpackProc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc));
   G__memfunc_setup("TSCNUnpackProc",1326,G__G__SCN_716_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSCNUnpackProc",1326,G__G__SCN_716_0_2, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildEvent",1010,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TGo4EventElement' - 0 - dest", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("get_Conversion",1477,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_used_Systems",1703,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_WR_Config",1277,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("load_PrcID_File",1424,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__SCN_716_0_8, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSCNUnpackProc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_716_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNUnpackProc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_716_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSCNUnpackProc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_716_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSCNUnpackProc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_716_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_716_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNUnpackProc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_716_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNUnpackProc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_716_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNUnpackProc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_716_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNUnpackProc::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSCNUnpackProc", 1326, G__G__SCN_716_0_20, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc), -1, 0, 1, 1, 1, 0, "u 'TSCNUnpackProc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSCNUnpackProc", 1452, G__G__SCN_716_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SCN_716_0_22, (int) ('u'), G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc), -1, 1, 1, 1, 1, 0, "u 'TSCNUnpackProc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSCNParameter(void) {
   /* TSCNParameter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter));
   G__memfunc_setup("TSCNParameter",1241,G__G__SCN_786_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter), -1, 0, 1, 1, 1, 0, "C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedestal",1118,G__G__SCN_786_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - chan i - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFactor",907,G__G__SCN_786_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - chan d - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__SCN_786_0_4, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSCNParameter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_786_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNParameter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_786_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSCNParameter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_786_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSCNParameter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_786_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_786_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNParameter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_786_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNParameter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_786_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNParameter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_786_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNParameter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSCNParameter", 1241, G__G__SCN_786_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter), -1, 0, 1, 1, 1, 0, "u 'TSCNParameter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSCNParameter", 1367, G__G__SCN_786_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SCN_786_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter), -1, 1, 1, 1, 1, 0, "u 'TSCNParameter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSCNCalEvent(void) {
   /* TSCNCalEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent));
   G__memfunc_setup("TSCNCalEvent",1098,G__G__SCN_787_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSCNCalEvent",1098,G__G__SCN_787_0_2, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SCN_787_0_4, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSCNCalEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_787_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNCalEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_787_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSCNCalEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_787_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSCNCalEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_787_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_787_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNCalEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_787_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNCalEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_787_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNCalEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_787_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNCalEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSCNCalEvent", 1098, G__G__SCN_787_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent), -1, 0, 1, 1, 1, 0, "u 'TSCNCalEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSCNCalEvent", 1224, G__G__SCN_787_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SCN_787_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent), -1, 1, 1, 1, 1, 0, "u 'TSCNCalEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSCNAnlEvent(void) {
   /* TSCNAnlEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent));
   G__memfunc_setup("TSCNAnlEvent",1109,G__G__SCN_788_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSCNAnlEvent",1109,G__G__SCN_788_0_2, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SCN_788_0_4, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSCNAnlEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_788_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNAnlEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_788_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSCNAnlEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_788_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSCNAnlEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_788_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_788_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNAnlEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_788_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNAnlEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_788_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNAnlEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_788_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNAnlEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSCNAnlEvent", 1109, G__G__SCN_788_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent), -1, 0, 1, 1, 1, 0, "u 'TSCNAnlEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSCNAnlEvent", 1235, G__G__SCN_788_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SCN_788_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent), -1, 1, 1, 1, 1, 0, "u 'TSCNAnlEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSCNAnalysis(void) {
   /* TSCNAnalysis */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis));
   G__memfunc_setup("TSCNAnalysis",1148,G__G__SCN_789_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSCNAnalysis",1148,G__G__SCN_789_0_2, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis), -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UserPreLoop",1120,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UserEventFunc",1325,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UserPostLoop",1247,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SCN_789_0_6, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSCNAnalysis::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_789_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNAnalysis::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_789_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSCNAnalysis::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_789_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSCNAnalysis::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_789_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_789_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNAnalysis::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_789_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNAnalysis::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_789_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNAnalysis::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_789_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNAnalysis::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSCNAnalysis", 1148, G__G__SCN_789_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis), -1, 0, 1, 1, 1, 0, "u 'TSCNAnalysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSCNAnalysis", 1274, G__G__SCN_789_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SCN_789_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis), -1, 1, 1, 1, 1, 0, "u 'TSCNAnalysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSCNAnlProc(void) {
   /* TSCNAnlProc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc));
   G__memfunc_setup("TSCNAnlProc",999,G__G__SCN_790_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSCNAnlProc",999,G__G__SCN_790_0_2, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildEvent",1010,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TGo4EventElement' - 0 - dest", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SCN_790_0_4, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSCNAnlProc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_790_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNAnlProc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_790_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSCNAnlProc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_790_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSCNAnlProc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_790_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_790_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNAnlProc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_790_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNAnlProc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_790_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNAnlProc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_790_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNAnlProc::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSCNAnlProc", 999, G__G__SCN_790_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc), -1, 0, 1, 1, 1, 0, "u 'TSCNAnlProc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSCNAnlProc", 1125, G__G__SCN_790_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SCN_790_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc), -1, 1, 1, 1, 1, 0, "u 'TSCNAnlProc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSCNCalProc(void) {
   /* TSCNCalProc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc));
   G__memfunc_setup("TSCNCalProc",988,G__G__SCN_791_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSCNCalProc",988,G__G__SCN_791_0_2, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildEvent",1010,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TGo4EventElement' - 0 - dest", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SCN_791_0_4, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSCNCalProc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_791_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNCalProc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_791_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSCNCalProc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_791_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSCNCalProc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_791_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_791_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNCalProc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_791_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNCalProc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_791_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNCalProc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_791_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNCalProc::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSCNCalProc", 988, G__G__SCN_791_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc), -1, 0, 1, 1, 1, 0, "u 'TSCNCalProc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSCNCalProc", 1114, G__G__SCN_791_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SCN_791_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc), -1, 1, 1, 1, 1, 0, "u 'TSCNCalProc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__SCN() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__SCN() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__SCN() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__SCNLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__SCNLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_Raw_Event = { "Raw_Event" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_Data_Stream = { "Data_Stream" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_Detector_System = { "Detector_System" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TGo4Picture = { "TGo4Picture" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TGo4EventSource = { "TGo4EventSource" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TGo4EventElement = { "TGo4EventElement" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TGo4MbsEvent = { "TGo4MbsEvent" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TSCNUnpackEvent = { "TSCNUnpackEvent" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_maplEpairlEintcOintgRcOintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOintgRsPgRsPgR = { "map<pair<int,int>,int,less<pair<int,int> >,allocator<pair<const pair<int,int>,int> > >" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_White_Rabbit = { "White_Rabbit" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TGo4WinCond = { "TGo4WinCond" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TGo4Parameter = { "TGo4Parameter" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TGo4EventProcessor = { "TGo4EventProcessor" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TSCNUnpackProc = { "TSCNUnpackProc" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TGo4CommandReceiver = { "TGo4CommandReceiver" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TGo4Analysis = { "TGo4Analysis" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TSCNParameter = { "TSCNParameter" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TSCNCalEvent = { "TSCNCalEvent" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TSCNAnlEvent = { "TSCNAnlEvent" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TSCNAnalysis = { "TSCNAnalysis" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TSCNAnlProc = { "TSCNAnlProc" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TSCNCalProc = { "TSCNCalProc" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__SCN() {
  G__G__SCNLN_TClass.tagnum = -1 ;
  G__G__SCNLN_TBuffer.tagnum = -1 ;
  G__G__SCNLN_TMemberInspector.tagnum = -1 ;
  G__G__SCNLN_TObject.tagnum = -1 ;
  G__G__SCNLN_TNamed.tagnum = -1 ;
  G__G__SCNLN_string.tagnum = -1 ;
  G__G__SCNLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__SCNLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__SCNLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__SCNLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__SCNLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__SCNLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__SCNLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__SCNLN_TH1D.tagnum = -1 ;
  G__G__SCNLN_TH1.tagnum = -1 ;
  G__G__SCNLN_Raw_Event.tagnum = -1 ;
  G__G__SCNLN_Data_Stream.tagnum = -1 ;
  G__G__SCNLN_Detector_System.tagnum = -1 ;
  G__G__SCNLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__SCNLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__SCNLN_TH2.tagnum = -1 ;
  G__G__SCNLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__SCNLN_TGo4Picture.tagnum = -1 ;
  G__G__SCNLN_TGo4EventSource.tagnum = -1 ;
  G__G__SCNLN_TGo4EventElement.tagnum = -1 ;
  G__G__SCNLN_TGo4MbsEvent.tagnum = -1 ;
  G__G__SCNLN_TSCNUnpackEvent.tagnum = -1 ;
  G__G__SCNLN_maplEpairlEintcOintgRcOintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__SCNLN_White_Rabbit.tagnum = -1 ;
  G__G__SCNLN_TGo4WinCond.tagnum = -1 ;
  G__G__SCNLN_TGo4Parameter.tagnum = -1 ;
  G__G__SCNLN_TGo4EventProcessor.tagnum = -1 ;
  G__G__SCNLN_TSCNUnpackProc.tagnum = -1 ;
  G__G__SCNLN_TGo4CommandReceiver.tagnum = -1 ;
  G__G__SCNLN_TGo4Analysis.tagnum = -1 ;
  G__G__SCNLN_TSCNParameter.tagnum = -1 ;
  G__G__SCNLN_TSCNCalEvent.tagnum = -1 ;
  G__G__SCNLN_TSCNAnlEvent.tagnum = -1 ;
  G__G__SCNLN_TSCNAnalysis.tagnum = -1 ;
  G__G__SCNLN_TSCNAnlProc.tagnum = -1 ;
  G__G__SCNLN_TSCNCalProc.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__SCN() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_string);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TH1D);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TH1);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_Raw_Event);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_Data_Stream);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_Detector_System);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TH2);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TGo4Picture);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TGo4EventSource);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TGo4EventElement);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TGo4MbsEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TSCNUnpackEvent),sizeof(TSCNUnpackEvent),-1,324864,(char*)NULL,G__setup_memvarTSCNUnpackEvent,G__setup_memfuncTSCNUnpackEvent);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_maplEpairlEintcOintgRcOintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_White_Rabbit);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TGo4WinCond);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TGo4Parameter);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TGo4EventProcessor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TSCNUnpackProc),sizeof(TSCNUnpackProc),-1,324864,(char*)NULL,G__setup_memvarTSCNUnpackProc,G__setup_memfuncTSCNUnpackProc);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TGo4CommandReceiver);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TGo4Analysis);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TSCNParameter),sizeof(TSCNParameter),-1,324864,(char*)NULL,G__setup_memvarTSCNParameter,G__setup_memfuncTSCNParameter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TSCNCalEvent),sizeof(TSCNCalEvent),-1,324864,(char*)NULL,G__setup_memvarTSCNCalEvent,G__setup_memfuncTSCNCalEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TSCNAnlEvent),sizeof(TSCNAnlEvent),-1,324864,(char*)NULL,G__setup_memvarTSCNAnlEvent,G__setup_memfuncTSCNAnlEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TSCNAnalysis),sizeof(TSCNAnalysis),-1,324864,(char*)NULL,G__setup_memvarTSCNAnalysis,G__setup_memfuncTSCNAnalysis);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TSCNAnlProc),sizeof(TSCNAnlProc),-1,324864,(char*)NULL,G__setup_memvarTSCNAnlProc,G__setup_memfuncTSCNAnlProc);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TSCNCalProc),sizeof(TSCNCalProc),-1,324864,(char*)NULL,G__setup_memvarTSCNCalProc,G__setup_memfuncTSCNCalProc);
}
extern "C" void G__cpp_setupG__SCN(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__SCN()");
  G__set_cpp_environmentG__SCN();
  G__cpp_setup_tagtableG__SCN();

  G__cpp_setup_inheritanceG__SCN();

  G__cpp_setup_typetableG__SCN();

  G__cpp_setup_memvarG__SCN();

  G__cpp_setup_memfuncG__SCN();
  G__cpp_setup_globalG__SCN();
  G__cpp_setup_funcG__SCN();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__SCN();
  return;
}
class G__cpp_setup_initG__SCN {
  public:
    G__cpp_setup_initG__SCN() { G__add_setup_func("G__SCN",(G__incsetup)(&G__cpp_setupG__SCN)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__SCN() { G__remove_setup_func("G__SCN"); }
};
G__cpp_setup_initG__SCN G__cpp_setup_initializerG__SCN;

