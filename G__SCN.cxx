//
// File generated by /cvmfs/csee.gsi.de/root/534-36/bin/rootcint at Fri Jul 27 13:10:24 2018

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME G__SCN
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__SCN.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void TSCNParameter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSCNParameter(void *p = 0);
   static void *newArray_TSCNParameter(Long_t size, void *p);
   static void delete_TSCNParameter(void *p);
   static void deleteArray_TSCNParameter(void *p);
   static void destruct_TSCNParameter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TSCNParameter*)
   {
      ::TSCNParameter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSCNParameter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSCNParameter", ::TSCNParameter::Class_Version(), "././TSCNParameter.h", 22,
                  typeid(::TSCNParameter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TSCNParameter::Dictionary, isa_proxy, 4,
                  sizeof(::TSCNParameter) );
      instance.SetNew(&new_TSCNParameter);
      instance.SetNewArray(&newArray_TSCNParameter);
      instance.SetDelete(&delete_TSCNParameter);
      instance.SetDeleteArray(&deleteArray_TSCNParameter);
      instance.SetDestructor(&destruct_TSCNParameter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TSCNParameter*)
   {
      return GenerateInitInstanceLocal((::TSCNParameter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSCNParameter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TXRSParameter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TXRSParameter(void *p = 0);
   static void *newArray_TXRSParameter(Long_t size, void *p);
   static void delete_TXRSParameter(void *p);
   static void deleteArray_TXRSParameter(void *p);
   static void destruct_TXRSParameter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TXRSParameter*)
   {
      ::TXRSParameter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TXRSParameter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TXRSParameter", ::TXRSParameter::Class_Version(), "././TXRSParameter.h", 8,
                  typeid(::TXRSParameter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TXRSParameter::Dictionary, isa_proxy, 4,
                  sizeof(::TXRSParameter) );
      instance.SetNew(&new_TXRSParameter);
      instance.SetNewArray(&newArray_TXRSParameter);
      instance.SetDelete(&delete_TXRSParameter);
      instance.SetDeleteArray(&deleteArray_TXRSParameter);
      instance.SetDestructor(&destruct_TXRSParameter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TXRSParameter*)
   {
      return GenerateInitInstanceLocal((::TXRSParameter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TXRSParameter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Map1_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Map1(void *p = 0);
   static void *newArray_Map1(Long_t size, void *p);
   static void delete_Map1(void *p);
   static void deleteArray_Map1(void *p);
   static void destruct_Map1(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Map1*)
   {
      ::Map1 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Map1 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Map1", ::Map1::Class_Version(), "././TXRSParameter.h", 89,
                  typeid(::Map1), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Map1::Dictionary, isa_proxy, 4,
                  sizeof(::Map1) );
      instance.SetNew(&new_Map1);
      instance.SetNewArray(&newArray_Map1);
      instance.SetDelete(&delete_Map1);
      instance.SetDeleteArray(&deleteArray_Map1);
      instance.SetDestructor(&destruct_Map1);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Map1*)
   {
      return GenerateInitInstanceLocal((::Map1*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Map1*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TModParameter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TModParameter(void *p = 0);
   static void *newArray_TModParameter(Long_t size, void *p);
   static void delete_TModParameter(void *p);
   static void deleteArray_TModParameter(void *p);
   static void destruct_TModParameter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TModParameter*)
   {
      ::TModParameter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TModParameter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TModParameter", ::TModParameter::Class_Version(), "././TXRSParameter.h", 97,
                  typeid(::TModParameter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TModParameter::Dictionary, isa_proxy, 4,
                  sizeof(::TModParameter) );
      instance.SetNew(&new_TModParameter);
      instance.SetNewArray(&newArray_TModParameter);
      instance.SetDelete(&delete_TModParameter);
      instance.SetDeleteArray(&deleteArray_TModParameter);
      instance.SetDestructor(&destruct_TModParameter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TModParameter*)
   {
      return GenerateInitInstanceLocal((::TModParameter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TModParameter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TMWParameter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TMWParameter(void *p = 0);
   static void *newArray_TMWParameter(Long_t size, void *p);
   static void delete_TMWParameter(void *p);
   static void deleteArray_TMWParameter(void *p);
   static void destruct_TMWParameter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TMWParameter*)
   {
      ::TMWParameter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMWParameter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMWParameter", ::TMWParameter::Class_Version(), "././TXRSParameter.h", 131,
                  typeid(::TMWParameter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TMWParameter::Dictionary, isa_proxy, 4,
                  sizeof(::TMWParameter) );
      instance.SetNew(&new_TMWParameter);
      instance.SetNewArray(&newArray_TMWParameter);
      instance.SetDelete(&delete_TMWParameter);
      instance.SetDeleteArray(&deleteArray_TMWParameter);
      instance.SetDestructor(&destruct_TMWParameter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TMWParameter*)
   {
      return GenerateInitInstanceLocal((::TMWParameter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMWParameter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TTPCParameter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TTPCParameter(void *p = 0);
   static void *newArray_TTPCParameter(Long_t size, void *p);
   static void delete_TTPCParameter(void *p);
   static void deleteArray_TTPCParameter(void *p);
   static void destruct_TTPCParameter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TTPCParameter*)
   {
      ::TTPCParameter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TTPCParameter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TTPCParameter", ::TTPCParameter::Class_Version(), "././TXRSParameter.h", 150,
                  typeid(::TTPCParameter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TTPCParameter::Dictionary, isa_proxy, 4,
                  sizeof(::TTPCParameter) );
      instance.SetNew(&new_TTPCParameter);
      instance.SetNewArray(&newArray_TTPCParameter);
      instance.SetDelete(&delete_TTPCParameter);
      instance.SetDeleteArray(&deleteArray_TTPCParameter);
      instance.SetDestructor(&destruct_TTPCParameter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TTPCParameter*)
   {
      return GenerateInitInstanceLocal((::TTPCParameter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TTPCParameter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TMUSICParameter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TMUSICParameter(void *p = 0);
   static void *newArray_TMUSICParameter(Long_t size, void *p);
   static void delete_TMUSICParameter(void *p);
   static void deleteArray_TMUSICParameter(void *p);
   static void destruct_TMUSICParameter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TMUSICParameter*)
   {
      ::TMUSICParameter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMUSICParameter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMUSICParameter", ::TMUSICParameter::Class_Version(), "././TXRSParameter.h", 174,
                  typeid(::TMUSICParameter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TMUSICParameter::Dictionary, isa_proxy, 4,
                  sizeof(::TMUSICParameter) );
      instance.SetNew(&new_TMUSICParameter);
      instance.SetNewArray(&newArray_TMUSICParameter);
      instance.SetDelete(&delete_TMUSICParameter);
      instance.SetDeleteArray(&deleteArray_TMUSICParameter);
      instance.SetDestructor(&destruct_TMUSICParameter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TMUSICParameter*)
   {
      return GenerateInitInstanceLocal((::TMUSICParameter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMUSICParameter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TSCIParameter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSCIParameter(void *p = 0);
   static void *newArray_TSCIParameter(Long_t size, void *p);
   static void delete_TSCIParameter(void *p);
   static void deleteArray_TSCIParameter(void *p);
   static void destruct_TSCIParameter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TSCIParameter*)
   {
      ::TSCIParameter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSCIParameter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSCIParameter", ::TSCIParameter::Class_Version(), "././TXRSParameter.h", 198,
                  typeid(::TSCIParameter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TSCIParameter::Dictionary, isa_proxy, 4,
                  sizeof(::TSCIParameter) );
      instance.SetNew(&new_TSCIParameter);
      instance.SetNewArray(&newArray_TSCIParameter);
      instance.SetDelete(&delete_TSCIParameter);
      instance.SetDeleteArray(&deleteArray_TSCIParameter);
      instance.SetDestructor(&destruct_TSCIParameter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TSCIParameter*)
   {
      return GenerateInitInstanceLocal((::TSCIParameter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSCIParameter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TIDParameter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TIDParameter(void *p = 0);
   static void *newArray_TIDParameter(Long_t size, void *p);
   static void delete_TIDParameter(void *p);
   static void deleteArray_TIDParameter(void *p);
   static void destruct_TIDParameter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TIDParameter*)
   {
      ::TIDParameter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TIDParameter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TIDParameter", ::TIDParameter::Class_Version(), "././TXRSParameter.h", 231,
                  typeid(::TIDParameter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TIDParameter::Dictionary, isa_proxy, 4,
                  sizeof(::TIDParameter) );
      instance.SetNew(&new_TIDParameter);
      instance.SetNewArray(&newArray_TIDParameter);
      instance.SetDelete(&delete_TIDParameter);
      instance.SetDeleteArray(&deleteArray_TIDParameter);
      instance.SetDestructor(&destruct_TIDParameter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TIDParameter*)
   {
      return GenerateInitInstanceLocal((::TIDParameter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TIDParameter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TSIParameter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSIParameter(void *p = 0);
   static void *newArray_TSIParameter(Long_t size, void *p);
   static void delete_TSIParameter(void *p);
   static void deleteArray_TSIParameter(void *p);
   static void destruct_TSIParameter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TSIParameter*)
   {
      ::TSIParameter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSIParameter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSIParameter", ::TSIParameter::Class_Version(), "././TXRSParameter.h", 277,
                  typeid(::TSIParameter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TSIParameter::Dictionary, isa_proxy, 4,
                  sizeof(::TSIParameter) );
      instance.SetNew(&new_TSIParameter);
      instance.SetNewArray(&newArray_TSIParameter);
      instance.SetDelete(&delete_TSIParameter);
      instance.SetDeleteArray(&deleteArray_TSIParameter);
      instance.SetDestructor(&destruct_TSIParameter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TSIParameter*)
   {
      return GenerateInitInstanceLocal((::TSIParameter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSIParameter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TMRTOFMSParameter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TMRTOFMSParameter(void *p = 0);
   static void *newArray_TMRTOFMSParameter(Long_t size, void *p);
   static void delete_TMRTOFMSParameter(void *p);
   static void deleteArray_TMRTOFMSParameter(void *p);
   static void destruct_TMRTOFMSParameter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TMRTOFMSParameter*)
   {
      ::TMRTOFMSParameter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TMRTOFMSParameter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TMRTOFMSParameter", ::TMRTOFMSParameter::Class_Version(), "././TXRSParameter.h", 304,
                  typeid(::TMRTOFMSParameter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TMRTOFMSParameter::Dictionary, isa_proxy, 4,
                  sizeof(::TMRTOFMSParameter) );
      instance.SetNew(&new_TMRTOFMSParameter);
      instance.SetNewArray(&newArray_TMRTOFMSParameter);
      instance.SetDelete(&delete_TMRTOFMSParameter);
      instance.SetDeleteArray(&deleteArray_TMRTOFMSParameter);
      instance.SetDestructor(&destruct_TMRTOFMSParameter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TMRTOFMSParameter*)
   {
      return GenerateInitInstanceLocal((::TMRTOFMSParameter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TMRTOFMSParameter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TSCNUnpackEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSCNUnpackEvent(void *p = 0);
   static void *newArray_TSCNUnpackEvent(Long_t size, void *p);
   static void delete_TSCNUnpackEvent(void *p);
   static void deleteArray_TSCNUnpackEvent(void *p);
   static void destruct_TSCNUnpackEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TSCNUnpackEvent*)
   {
      ::TSCNUnpackEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSCNUnpackEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSCNUnpackEvent", ::TSCNUnpackEvent::Class_Version(), "././TSCNUnpackEvent.h", 27,
                  typeid(::TSCNUnpackEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TSCNUnpackEvent::Dictionary, isa_proxy, 4,
                  sizeof(::TSCNUnpackEvent) );
      instance.SetNew(&new_TSCNUnpackEvent);
      instance.SetNewArray(&newArray_TSCNUnpackEvent);
      instance.SetDelete(&delete_TSCNUnpackEvent);
      instance.SetDeleteArray(&deleteArray_TSCNUnpackEvent);
      instance.SetDestructor(&destruct_TSCNUnpackEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TSCNUnpackEvent*)
   {
      return GenerateInitInstanceLocal((::TSCNUnpackEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSCNUnpackEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TSCNUnpackProc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSCNUnpackProc(void *p = 0);
   static void *newArray_TSCNUnpackProc(Long_t size, void *p);
   static void delete_TSCNUnpackProc(void *p);
   static void deleteArray_TSCNUnpackProc(void *p);
   static void destruct_TSCNUnpackProc(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TSCNUnpackProc*)
   {
      ::TSCNUnpackProc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSCNUnpackProc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSCNUnpackProc", ::TSCNUnpackProc::Class_Version(), "././First_Test.h", 62,
                  typeid(::TSCNUnpackProc), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TSCNUnpackProc::Dictionary, isa_proxy, 4,
                  sizeof(::TSCNUnpackProc) );
      instance.SetNew(&new_TSCNUnpackProc);
      instance.SetNewArray(&newArray_TSCNUnpackProc);
      instance.SetDelete(&delete_TSCNUnpackProc);
      instance.SetDeleteArray(&deleteArray_TSCNUnpackProc);
      instance.SetDestructor(&destruct_TSCNUnpackProc);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TSCNUnpackProc*)
   {
      return GenerateInitInstanceLocal((::TSCNUnpackProc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSCNUnpackProc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TSCNCalEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSCNCalEvent(void *p = 0);
   static void *newArray_TSCNCalEvent(Long_t size, void *p);
   static void delete_TSCNCalEvent(void *p);
   static void deleteArray_TSCNCalEvent(void *p);
   static void destruct_TSCNCalEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TSCNCalEvent*)
   {
      ::TSCNCalEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSCNCalEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSCNCalEvent", ::TSCNCalEvent::Class_Version(), "././TSCNCalEvent.h", 21,
                  typeid(::TSCNCalEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TSCNCalEvent::Dictionary, isa_proxy, 4,
                  sizeof(::TSCNCalEvent) );
      instance.SetNew(&new_TSCNCalEvent);
      instance.SetNewArray(&newArray_TSCNCalEvent);
      instance.SetDelete(&delete_TSCNCalEvent);
      instance.SetDeleteArray(&deleteArray_TSCNCalEvent);
      instance.SetDestructor(&destruct_TSCNCalEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TSCNCalEvent*)
   {
      return GenerateInitInstanceLocal((::TSCNCalEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSCNCalEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TSCNAnlEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSCNAnlEvent(void *p = 0);
   static void *newArray_TSCNAnlEvent(Long_t size, void *p);
   static void delete_TSCNAnlEvent(void *p);
   static void deleteArray_TSCNAnlEvent(void *p);
   static void destruct_TSCNAnlEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TSCNAnlEvent*)
   {
      ::TSCNAnlEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSCNAnlEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSCNAnlEvent", ::TSCNAnlEvent::Class_Version(), "././TSCNAnlEvent.h", 21,
                  typeid(::TSCNAnlEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TSCNAnlEvent::Dictionary, isa_proxy, 4,
                  sizeof(::TSCNAnlEvent) );
      instance.SetNew(&new_TSCNAnlEvent);
      instance.SetNewArray(&newArray_TSCNAnlEvent);
      instance.SetDelete(&delete_TSCNAnlEvent);
      instance.SetDeleteArray(&deleteArray_TSCNAnlEvent);
      instance.SetDestructor(&destruct_TSCNAnlEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TSCNAnlEvent*)
   {
      return GenerateInitInstanceLocal((::TSCNAnlEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSCNAnlEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TSCNAnalysis_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSCNAnalysis(void *p = 0);
   static void *newArray_TSCNAnalysis(Long_t size, void *p);
   static void delete_TSCNAnalysis(void *p);
   static void deleteArray_TSCNAnalysis(void *p);
   static void destruct_TSCNAnalysis(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TSCNAnalysis*)
   {
      ::TSCNAnalysis *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSCNAnalysis >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSCNAnalysis", ::TSCNAnalysis::Class_Version(), "././TSCNAnalysis.h", 27,
                  typeid(::TSCNAnalysis), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TSCNAnalysis::Dictionary, isa_proxy, 4,
                  sizeof(::TSCNAnalysis) );
      instance.SetNew(&new_TSCNAnalysis);
      instance.SetNewArray(&newArray_TSCNAnalysis);
      instance.SetDelete(&delete_TSCNAnalysis);
      instance.SetDeleteArray(&deleteArray_TSCNAnalysis);
      instance.SetDestructor(&destruct_TSCNAnalysis);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TSCNAnalysis*)
   {
      return GenerateInitInstanceLocal((::TSCNAnalysis*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSCNAnalysis*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TSCNAnlProc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSCNAnlProc(void *p = 0);
   static void *newArray_TSCNAnlProc(Long_t size, void *p);
   static void delete_TSCNAnlProc(void *p);
   static void deleteArray_TSCNAnlProc(void *p);
   static void destruct_TSCNAnlProc(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TSCNAnlProc*)
   {
      ::TSCNAnlProc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSCNAnlProc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSCNAnlProc", ::TSCNAnlProc::Class_Version(), "././TSCNAnlProc.h", 29,
                  typeid(::TSCNAnlProc), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TSCNAnlProc::Dictionary, isa_proxy, 4,
                  sizeof(::TSCNAnlProc) );
      instance.SetNew(&new_TSCNAnlProc);
      instance.SetNewArray(&newArray_TSCNAnlProc);
      instance.SetDelete(&delete_TSCNAnlProc);
      instance.SetDeleteArray(&deleteArray_TSCNAnlProc);
      instance.SetDestructor(&destruct_TSCNAnlProc);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TSCNAnlProc*)
   {
      return GenerateInitInstanceLocal((::TSCNAnlProc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSCNAnlProc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TSCNCalProc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSCNCalProc(void *p = 0);
   static void *newArray_TSCNCalProc(Long_t size, void *p);
   static void delete_TSCNCalProc(void *p);
   static void deleteArray_TSCNCalProc(void *p);
   static void destruct_TSCNCalProc(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TSCNCalProc*)
   {
      ::TSCNCalProc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSCNCalProc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSCNCalProc", ::TSCNCalProc::Class_Version(), "././TSCNCalProc.h", 26,
                  typeid(::TSCNCalProc), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TSCNCalProc::Dictionary, isa_proxy, 4,
                  sizeof(::TSCNCalProc) );
      instance.SetNew(&new_TSCNCalProc);
      instance.SetNewArray(&newArray_TSCNCalProc);
      instance.SetDelete(&delete_TSCNCalProc);
      instance.SetDeleteArray(&deleteArray_TSCNCalProc);
      instance.SetDestructor(&destruct_TSCNCalProc);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TSCNCalProc*)
   {
      return GenerateInitInstanceLocal((::TSCNCalProc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSCNCalProc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr TSCNParameter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSCNParameter::Class_Name()
{
   return "TSCNParameter";
}

//______________________________________________________________________________
const char *TSCNParameter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNParameter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSCNParameter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNParameter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSCNParameter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNParameter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSCNParameter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNParameter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TXRSParameter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TXRSParameter::Class_Name()
{
   return "TXRSParameter";
}

//______________________________________________________________________________
const char *TXRSParameter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TXRSParameter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TXRSParameter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TXRSParameter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TXRSParameter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TXRSParameter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TXRSParameter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TXRSParameter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Map1::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Map1::Class_Name()
{
   return "Map1";
}

//______________________________________________________________________________
const char *Map1::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Map1*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Map1::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Map1*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Map1::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Map1*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Map1::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Map1*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TModParameter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TModParameter::Class_Name()
{
   return "TModParameter";
}

//______________________________________________________________________________
const char *TModParameter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TModParameter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TModParameter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TModParameter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TModParameter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TModParameter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TModParameter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TModParameter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TMWParameter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TMWParameter::Class_Name()
{
   return "TMWParameter";
}

//______________________________________________________________________________
const char *TMWParameter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TMWParameter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMWParameter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TMWParameter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMWParameter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TMWParameter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMWParameter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TMWParameter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TTPCParameter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TTPCParameter::Class_Name()
{
   return "TTPCParameter";
}

//______________________________________________________________________________
const char *TTPCParameter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TTPCParameter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTPCParameter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TTPCParameter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTPCParameter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TTPCParameter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTPCParameter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TTPCParameter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TMUSICParameter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TMUSICParameter::Class_Name()
{
   return "TMUSICParameter";
}

//______________________________________________________________________________
const char *TMUSICParameter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TMUSICParameter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMUSICParameter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TMUSICParameter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMUSICParameter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TMUSICParameter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMUSICParameter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TMUSICParameter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TSCIParameter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSCIParameter::Class_Name()
{
   return "TSCIParameter";
}

//______________________________________________________________________________
const char *TSCIParameter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCIParameter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSCIParameter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCIParameter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSCIParameter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCIParameter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSCIParameter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCIParameter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TIDParameter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TIDParameter::Class_Name()
{
   return "TIDParameter";
}

//______________________________________________________________________________
const char *TIDParameter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TIDParameter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TIDParameter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TIDParameter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TIDParameter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TIDParameter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TIDParameter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TIDParameter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TSIParameter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSIParameter::Class_Name()
{
   return "TSIParameter";
}

//______________________________________________________________________________
const char *TSIParameter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSIParameter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSIParameter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSIParameter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSIParameter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSIParameter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSIParameter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSIParameter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TMRTOFMSParameter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TMRTOFMSParameter::Class_Name()
{
   return "TMRTOFMSParameter";
}

//______________________________________________________________________________
const char *TMRTOFMSParameter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TMRTOFMSParameter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TMRTOFMSParameter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TMRTOFMSParameter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TMRTOFMSParameter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TMRTOFMSParameter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TMRTOFMSParameter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TMRTOFMSParameter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TSCNUnpackEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSCNUnpackEvent::Class_Name()
{
   return "TSCNUnpackEvent";
}

//______________________________________________________________________________
const char *TSCNUnpackEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNUnpackEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSCNUnpackEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNUnpackEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSCNUnpackEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNUnpackEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSCNUnpackEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNUnpackEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TSCNUnpackProc::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSCNUnpackProc::Class_Name()
{
   return "TSCNUnpackProc";
}

//______________________________________________________________________________
const char *TSCNUnpackProc::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNUnpackProc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSCNUnpackProc::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNUnpackProc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSCNUnpackProc::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNUnpackProc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSCNUnpackProc::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNUnpackProc*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TSCNCalEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSCNCalEvent::Class_Name()
{
   return "TSCNCalEvent";
}

//______________________________________________________________________________
const char *TSCNCalEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNCalEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSCNCalEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNCalEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSCNCalEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNCalEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSCNCalEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNCalEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TSCNAnlEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSCNAnlEvent::Class_Name()
{
   return "TSCNAnlEvent";
}

//______________________________________________________________________________
const char *TSCNAnlEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNAnlEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSCNAnlEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNAnlEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSCNAnlEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNAnlEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSCNAnlEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNAnlEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TSCNAnalysis::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSCNAnalysis::Class_Name()
{
   return "TSCNAnalysis";
}

//______________________________________________________________________________
const char *TSCNAnalysis::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNAnalysis*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSCNAnalysis::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNAnalysis*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSCNAnalysis::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNAnalysis*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSCNAnalysis::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNAnalysis*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TSCNAnlProc::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSCNAnlProc::Class_Name()
{
   return "TSCNAnlProc";
}

//______________________________________________________________________________
const char *TSCNAnlProc::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNAnlProc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSCNAnlProc::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNAnlProc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSCNAnlProc::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNAnlProc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSCNAnlProc::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNAnlProc*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TSCNCalProc::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TSCNCalProc::Class_Name()
{
   return "TSCNCalProc";
}

//______________________________________________________________________________
const char *TSCNCalProc::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNCalProc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSCNCalProc::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNCalProc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSCNCalProc::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNCalProc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSCNCalProc::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TSCNCalProc*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void TSCNParameter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSCNParameter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSCNParameter::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSCNParameter::Class(),this);
   }
}

//______________________________________________________________________________
void TSCNParameter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSCNParameter.
      TClass *R__cl = ::TSCNParameter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pedestals[32]", Pedestals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Factors[32]", Factors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "peak_alg", &peak_alg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Anodes_Low", &Anodes_Low);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Anodes_High", &Anodes_High);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QDC2Ch0_Low", &QDC2Ch0_Low);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QDC2Ch0_High", &QDC2Ch0_High);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QDC2Ch1_Low", &QDC2Ch1_Low);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "QDC2Ch1_High", &QDC2Ch1_High);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ClusterCh0_Low", &ClusterCh0_Low);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ClusterCh0_High", &ClusterCh0_High);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NaI_F", &NaI_F);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cluster_F", &Cluster_F);
      TGo4Parameter::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TSCNParameter(void *p) {
      return  p ? new(p) ::TSCNParameter : new ::TSCNParameter;
   }
   static void *newArray_TSCNParameter(Long_t nElements, void *p) {
      return p ? new(p) ::TSCNParameter[nElements] : new ::TSCNParameter[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSCNParameter(void *p) {
      delete ((::TSCNParameter*)p);
   }
   static void deleteArray_TSCNParameter(void *p) {
      delete [] ((::TSCNParameter*)p);
   }
   static void destruct_TSCNParameter(void *p) {
      typedef ::TSCNParameter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TSCNParameter

//______________________________________________________________________________
void TSCNAnalysis::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSCNAnalysis.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSCNAnalysis::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSCNAnalysis::Class(),this);
   }
}

//______________________________________________________________________________
void TSCNAnalysis::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSCNAnalysis.
      TClass *R__cl = ::TSCNAnalysis::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMbsEvent", &fMbsEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRawEvent", &fRawEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCalEvent", &fCalEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAnlEvent", &fAnlEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPar", &fPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvents", &fEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastEvent", &fLastEvent);
      TGo4Analysis::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TSCNAnalysis(void *p) {
      return  p ? new(p) ::TSCNAnalysis : new ::TSCNAnalysis;
   }
   static void *newArray_TSCNAnalysis(Long_t nElements, void *p) {
      return p ? new(p) ::TSCNAnalysis[nElements] : new ::TSCNAnalysis[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSCNAnalysis(void *p) {
      delete ((::TSCNAnalysis*)p);
   }
   static void deleteArray_TSCNAnalysis(void *p) {
      delete [] ((::TSCNAnalysis*)p);
   }
   static void destruct_TSCNAnalysis(void *p) {
      typedef ::TSCNAnalysis current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TSCNAnalysis

//______________________________________________________________________________
void TSCNUnpackEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSCNUnpackEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSCNUnpackEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSCNUnpackEvent::Class(),this);
   }
}

//______________________________________________________________________________
void TSCNUnpackEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSCNUnpackEvent.
      TClass *R__cl = ::TSCNUnpackEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fiCrate1[36]", fiCrate1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fiCrate2[36]", fiCrate2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fiCrate3[36]", fiCrate3);
      TGo4EventElement::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TSCNUnpackEvent(void *p) {
      return  p ? new(p) ::TSCNUnpackEvent : new ::TSCNUnpackEvent;
   }
   static void *newArray_TSCNUnpackEvent(Long_t nElements, void *p) {
      return p ? new(p) ::TSCNUnpackEvent[nElements] : new ::TSCNUnpackEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSCNUnpackEvent(void *p) {
      delete ((::TSCNUnpackEvent*)p);
   }
   static void deleteArray_TSCNUnpackEvent(void *p) {
      delete [] ((::TSCNUnpackEvent*)p);
   }
   static void destruct_TSCNUnpackEvent(void *p) {
      typedef ::TSCNUnpackEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TSCNUnpackEvent

//______________________________________________________________________________
void TSCNUnpackProc::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSCNUnpackProc.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSCNUnpackProc::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSCNUnpackProc::Class(),this);
   }
}

//______________________________________________________________________________
void TSCNUnpackProc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSCNUnpackProc.
      TClass *R__cl = ::TSCNUnpackProc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FATgate1_low", &FATgate1_low);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FATgate1_high", &FATgate1_high);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FATgate2_low", &FATgate2_low);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FATgate2_high", &FATgate2_high);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsci_tofll2", &hsci_tofll2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsci_tofll3", &hsci_tofll3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsci_tof2", &hsci_tof2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsci_tofrr2", &hsci_tofrr2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsci_tofrr3", &hsci_tofrr3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsci_tof3", &hsci_tof3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hID_x2", &hID_x2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hID_y2", &hID_y2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hID_a2", &hID_a2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hID_b2", &hID_b2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hID_x4", &hID_x4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hID_y4", &hID_y4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hID_a4", &hID_a4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hID_b4", &hID_b4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hbeta", &hbeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hbeta3", &hbeta3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hgamma", &hgamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hAoQ", &hAoQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hAoQ_corr", &hAoQ_corr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hz", &hz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hz2", &hz2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hz3", &hz3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*htimestamp", &htimestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hts", &hts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hts2", &hts2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FAT_Esum", &FAT_Esum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FAT_gg", &FAT_gg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FAT_TDCdtsum", &FAT_TDCdtsum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FAT_QDCdtsum", &FAT_QDCdtsum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FAT_TDCdtsum_ref_gated", &FAT_TDCdtsum_ref_gated);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FAT_QDCdtsum_ref_gated", &FAT_QDCdtsum_ref_gated);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FAT_hits", &FAT_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FAT_hits_QDC", &FAT_hits_QDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FAT_hits_TDC", &FAT_hits_TDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FAT_QDC_TDC_hitmap", &FAT_QDC_TDC_hitmap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FAT_correlations", &FAT_correlations);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FAT_E", &FAT_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FAT_Eraw", &FAT_Eraw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FAT_E_ratio", &FAT_E_ratio);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FAT_gg_ref", &FAT_gg_ref);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FAT_TDCdt_ref", &FAT_TDCdt_ref);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FAT_QDCdt_ref", &FAT_QDCdt_ref);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FAT_TDC_QDC_dt", &FAT_TDC_QDC_dt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FAT_TDCdt_ref_gated", &FAT_TDCdt_ref_gated);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FAT_E_TDCdt_ref_gated", &FAT_E_TDCdt_ref_gated);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*WR_HIST", &WR_HIST);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*WR_HIST2", &WR_HIST2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*C_t", &C_t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tamex_Mult_lead", &tamex_Mult_lead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tamex_Mult_trail", &tamex_Mult_trail);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mat", &mat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*all", &all);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*all2", &all2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*WR_F", &WR_F);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Coarse", &Coarse);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DIFF_ARR", &DIFF_ARR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tamex_Mult_Ch_lead", &tamex_Mult_Ch_lead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tamex_Mult_Ch_trail", &tamex_Mult_Ch_trail);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FAT_TDC_Diff", &FAT_TDC_Diff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tamex_mult_mat_lead", &tamex_mult_mat_lead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tamex_mult_mat_trail", &tamex_mult_mat_trail);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Trail_LEAD", &Trail_LEAD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*LEAD_LEAD", &LEAD_LEAD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GAL_Pileup", &GAL_Pileup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GAL_Hit_Pat", &GAL_Hit_Pat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GAL_Chan_Time_Diff", &GAL_Chan_Time_Diff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GAL_Chan_E[5]", &GAL_Chan_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GAL_Chan_E_Mat", &GAL_Chan_E_Mat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*GAL_Time_Diff_vs_Energy[5]", &GAL_Time_Diff_vs_Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FATIMA_reference_det", &FATIMA_reference_det);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FAT_MAX_DET", &FAT_MAX_DET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FAT_REF_DET", &FAT_REF_DET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_gate1", &E_gate1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_gate2", &E_gate2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ffill", &ffill);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fshift", &fshift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "White_Rabbbit_old", &White_Rabbbit_old);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PrcID_Array[10][5]", PrcID_Array);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Used_Systems[10]", Used_Systems);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SKIP_EVT_BUILDING", &SKIP_EVT_BUILDING);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vals[100000]", vals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "val_it", &val_it);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "input_data_path", (void*)&input_data_path);
      R__insp.InspectMember("string", (void*)&input_data_path, "input_data_path.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "input_data_path_old", (void*)&input_data_path_old);
      R__insp.InspectMember("string", (void*)&input_data_path_old, "input_data_path_old.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cals_done", &cals_done);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "WR_used", &WR_used);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FAT_make_raw_histograms", &FAT_make_raw_histograms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FAT_gain_match_used", &FAT_gain_match_used);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FAT_gain_match_done", &FAT_gain_match_done);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "file_pwd", &file_pwd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "file_end", &file_end);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gain_match_filename", (void*)&gain_match_filename);
      R__insp.InspectMember("string", (void*)&gain_match_filename, "gain_match_filename.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Detector_Systems", &Detector_Systems);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*data_stream", &data_stream);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*WR", &WR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*RAW", &RAW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "amount_interest", &amount_interest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*length_interest", &length_interest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*interest_array", &interest_array);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fatima_E_save[4]", fatima_E_save);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "am_FATIMA_hits", &am_FATIMA_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "num_full_FAT_evts", &num_full_FAT_evts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "am_GALILEO_hits", &am_GALILEO_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "count", &count);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "called[2]", called);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iterator", &iterator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "WR_tmp[2]", WR_tmp);
      TGo4EventProcessor::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TSCNUnpackProc(void *p) {
      return  p ? new(p) ::TSCNUnpackProc : new ::TSCNUnpackProc;
   }
   static void *newArray_TSCNUnpackProc(Long_t nElements, void *p) {
      return p ? new(p) ::TSCNUnpackProc[nElements] : new ::TSCNUnpackProc[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSCNUnpackProc(void *p) {
      delete ((::TSCNUnpackProc*)p);
   }
   static void deleteArray_TSCNUnpackProc(void *p) {
      delete [] ((::TSCNUnpackProc*)p);
   }
   static void destruct_TSCNUnpackProc(void *p) {
      typedef ::TSCNUnpackProc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TSCNUnpackProc

//______________________________________________________________________________
void TSCNCalEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSCNCalEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSCNCalEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSCNCalEvent::Class(),this);
   }
}

//______________________________________________________________________________
void TSCNCalEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSCNCalEvent.
      TClass *R__cl = ::TSCNCalEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "frDataC1[36]", frDataC1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "frDataC2[36]", frDataC2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "frDataC3[36]", frDataC3);
      TGo4EventElement::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TSCNCalEvent(void *p) {
      return  p ? new(p) ::TSCNCalEvent : new ::TSCNCalEvent;
   }
   static void *newArray_TSCNCalEvent(Long_t nElements, void *p) {
      return p ? new(p) ::TSCNCalEvent[nElements] : new ::TSCNCalEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSCNCalEvent(void *p) {
      delete ((::TSCNCalEvent*)p);
   }
   static void deleteArray_TSCNCalEvent(void *p) {
      delete [] ((::TSCNCalEvent*)p);
   }
   static void destruct_TSCNCalEvent(void *p) {
      typedef ::TSCNCalEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TSCNCalEvent

//______________________________________________________________________________
void TSCNCalProc::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSCNCalProc.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSCNCalProc::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSCNCalProc::Class(),this);
   }
}

//______________________________________________________________________________
void TSCNCalProc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSCNCalProc.
      TClass *R__cl = ::TSCNCalProc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fQDC1Ch[36]", &fQDC1Ch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Sum", &Sum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParam1", &fParam1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*picPMT", &picPMT);
      TGo4EventProcessor::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TSCNCalProc(void *p) {
      return  p ? new(p) ::TSCNCalProc : new ::TSCNCalProc;
   }
   static void *newArray_TSCNCalProc(Long_t nElements, void *p) {
      return p ? new(p) ::TSCNCalProc[nElements] : new ::TSCNCalProc[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSCNCalProc(void *p) {
      delete ((::TSCNCalProc*)p);
   }
   static void deleteArray_TSCNCalProc(void *p) {
      delete [] ((::TSCNCalProc*)p);
   }
   static void destruct_TSCNCalProc(void *p) {
      typedef ::TSCNCalProc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TSCNCalProc

//______________________________________________________________________________
void TSCNAnlEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSCNAnlEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSCNAnlEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSCNAnlEvent::Class(),this);
   }
}

//______________________________________________________________________________
void TSCNAnlEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSCNAnlEvent.
      TClass *R__cl = ::TSCNAnlEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Data1[36]", Data1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Data2[36]", Data2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Data3[36]", Data3);
      TGo4EventElement::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TSCNAnlEvent(void *p) {
      return  p ? new(p) ::TSCNAnlEvent : new ::TSCNAnlEvent;
   }
   static void *newArray_TSCNAnlEvent(Long_t nElements, void *p) {
      return p ? new(p) ::TSCNAnlEvent[nElements] : new ::TSCNAnlEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSCNAnlEvent(void *p) {
      delete ((::TSCNAnlEvent*)p);
   }
   static void deleteArray_TSCNAnlEvent(void *p) {
      delete [] ((::TSCNAnlEvent*)p);
   }
   static void destruct_TSCNAnlEvent(void *p) {
      typedef ::TSCNAnlEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TSCNAnlEvent

//______________________________________________________________________________
void TSCNAnlProc::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSCNAnlProc.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSCNAnlProc::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSCNAnlProc::Class(),this);
   }
}

//______________________________________________________________________________
void TSCNAnlProc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSCNAnlProc.
      TClass *R__cl = ::TSCNAnlProc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTimeDiff", &fTimeDiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGatedHist", &fGatedHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fconHis1", &fconHis1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWinCon1", &fWinCon1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*XAnodes", &XAnodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*YAnodes", &YAnodes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParam1", &fParam1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*QSpectrum", &QSpectrum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCoincQ1A1", &fCoincQ1A1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCoincQ1T1", &fCoincQ1T1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MatrixCond", &MatrixCond);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MatrixCluster", &MatrixCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Refx", &Refx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Refy", &Refy);
      TGo4EventProcessor::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TSCNAnlProc(void *p) {
      return  p ? new(p) ::TSCNAnlProc : new ::TSCNAnlProc;
   }
   static void *newArray_TSCNAnlProc(Long_t nElements, void *p) {
      return p ? new(p) ::TSCNAnlProc[nElements] : new ::TSCNAnlProc[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSCNAnlProc(void *p) {
      delete ((::TSCNAnlProc*)p);
   }
   static void deleteArray_TSCNAnlProc(void *p) {
      delete [] ((::TSCNAnlProc*)p);
   }
   static void destruct_TSCNAnlProc(void *p) {
      typedef ::TSCNAnlProc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TSCNAnlProc

//______________________________________________________________________________
void TXRSParameter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TXRSParameter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TXRSParameter::Class(),this);
   } else {
      R__b.WriteClassBuffer(TXRSParameter::Class(),this);
   }
}

//______________________________________________________________________________
void TXRSParameter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TXRSParameter.
      TClass *R__cl = ::TXRSParameter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fill_raw_histos", &fill_raw_histos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "after_run176", &after_run176);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "max_scaler", &max_scaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_focS2", &dist_focS2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_MW21", &dist_MW21);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_MW22", &dist_MW22);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_SC21", &dist_SC21);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_SC22", &dist_SC22);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_TPC3", &dist_TPC3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_TPC4", &dist_TPC4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_focS4", &dist_focS4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_MW41", &dist_MW41);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_MW42", &dist_MW42);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_MW43", &dist_MW43);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_SC41", &dist_SC41);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_SC42", &dist_SC42);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_SC43", &dist_SC43);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_itag_42", &dist_itag_42);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_itag_43", &dist_itag_43);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_itag_stopper", &dist_itag_stopper);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_TPC1", &dist_TPC1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_TPC2", &dist_TPC2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_TPC5", &dist_TPC5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_TPC6", &dist_TPC6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_MUSICa1", &dist_MUSICa1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_MUSICa2", &dist_MUSICa2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_MUSICa3", &dist_MUSICa3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_MUSICa4", &dist_MUSICa4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_MUSIC1", &dist_MUSIC1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_MUSIC2", &dist_MUSIC2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_MUSIC3", &dist_MUSIC3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_focS8", &dist_focS8);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_MW81", &dist_MW81);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_MW82", &dist_MW82);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dist_SC81", &dist_SC81);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dispersion[7]", dispersion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "magnification[7]", magnification);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bfield[7]", bfield);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rho0[7]", rho0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "primary_z", &primary_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "offset_z", &offset_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "offset_z2", &offset_z2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "offset_z3", &offset_z3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2AoQCorr", &a2AoQCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a4AoQCorr", &a4AoQCorr);
      TGo4Parameter::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TXRSParameter(void *p) {
      return  p ? new(p) ::TXRSParameter : new ::TXRSParameter;
   }
   static void *newArray_TXRSParameter(Long_t nElements, void *p) {
      return p ? new(p) ::TXRSParameter[nElements] : new ::TXRSParameter[nElements];
   }
   // Wrapper around operator delete
   static void delete_TXRSParameter(void *p) {
      delete ((::TXRSParameter*)p);
   }
   static void deleteArray_TXRSParameter(void *p) {
      delete [] ((::TXRSParameter*)p);
   }
   static void destruct_TXRSParameter(void *p) {
      typedef ::TXRSParameter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TXRSParameter

//______________________________________________________________________________
void TModParameter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TModParameter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TModParameter::Class(),this);
   } else {
      R__b.WriteClassBuffer(TModParameter::Class(),this);
   }
}

//______________________________________________________________________________
void TModParameter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TModParameter.
      TClass *R__cl = ::TModParameter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nb_Modules", &Nb_Modules);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nb_QDC", &Nb_QDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nb_ADC", &Nb_ADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nb_TDC", &Nb_TDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nb_Scaler", &Nb_Scaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nb_TimeStamp", &Nb_TimeStamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Scaler32bit", &Scaler32bit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EventFlags", (void*)&EventFlags);
      R__insp.InspectMember("vector<int>", (void*)&EventFlags, "EventFlags.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nb_Channels", (void*)&Nb_Channels);
      R__insp.InspectMember("map<int,int>", (void*)&Nb_Channels, "Nb_Channels.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MapCrates", (void*)&MapCrates);
      R__insp.InspectMember("map<int,std::map<int,int> >", (void*)&MapCrates, "MapCrates.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Maptemp", &Maptemp);
      R__insp.InspectMember(Maptemp, "Maptemp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ModType", (void*)&ModType);
      R__insp.InspectMember("vector<std::string>", (void*)&ModType, "ModType.", false);
      TGo4Parameter::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TModParameter(void *p) {
      return  p ? new(p) ::TModParameter : new ::TModParameter;
   }
   static void *newArray_TModParameter(Long_t nElements, void *p) {
      return p ? new(p) ::TModParameter[nElements] : new ::TModParameter[nElements];
   }
   // Wrapper around operator delete
   static void delete_TModParameter(void *p) {
      delete ((::TModParameter*)p);
   }
   static void deleteArray_TModParameter(void *p) {
      delete [] ((::TModParameter*)p);
   }
   static void destruct_TModParameter(void *p) {
      typedef ::TModParameter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TModParameter

//______________________________________________________________________________
void Map1::Streamer(TBuffer &R__b)
{
   // Stream an object of class Map1.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Map1::Class(),this);
   } else {
      R__b.WriteClassBuffer(Map1::Class(),this);
   }
}

//______________________________________________________________________________
void Map1::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Map1.
      TClass *R__cl = ::Map1::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "map", (void*)&map);
      R__insp.InspectMember("map<int,int>", (void*)&map, "map.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Map1(void *p) {
      return  p ? new(p) ::Map1 : new ::Map1;
   }
   static void *newArray_Map1(Long_t nElements, void *p) {
      return p ? new(p) ::Map1[nElements] : new ::Map1[nElements];
   }
   // Wrapper around operator delete
   static void delete_Map1(void *p) {
      delete ((::Map1*)p);
   }
   static void deleteArray_Map1(void *p) {
      delete [] ((::Map1*)p);
   }
   static void destruct_Map1(void *p) {
      typedef ::Map1 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Map1

//______________________________________________________________________________
void TMWParameter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMWParameter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMWParameter::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMWParameter::Class(),this);
   }
}

//______________________________________________________________________________
void TMWParameter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TMWParameter.
      TClass *R__cl = ::TMWParameter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x_factor[13]", x_factor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x_offset[13]", x_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y_factor[13]", y_factor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y_offset[13]", y_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gain_tdc[5][13]", gain_tdc);
      TGo4Parameter::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TMWParameter(void *p) {
      return  p ? new(p) ::TMWParameter : new ::TMWParameter;
   }
   static void *newArray_TMWParameter(Long_t nElements, void *p) {
      return p ? new(p) ::TMWParameter[nElements] : new ::TMWParameter[nElements];
   }
   // Wrapper around operator delete
   static void delete_TMWParameter(void *p) {
      delete ((::TMWParameter*)p);
   }
   static void deleteArray_TMWParameter(void *p) {
      delete [] ((::TMWParameter*)p);
   }
   static void destruct_TMWParameter(void *p) {
      typedef ::TMWParameter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TMWParameter

//______________________________________________________________________________
void TTPCParameter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TTPCParameter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TTPCParameter::Class(),this);
   } else {
      R__b.WriteClassBuffer(TTPCParameter::Class(),this);
   }
}

//______________________________________________________________________________
void TTPCParameter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TTPCParameter.
      TClass *R__cl = ::TTPCParameter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x_factor[7][2]", x_factor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x_offset[7][2]", x_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y_factor[7][4]", y_factor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y_offset[7][4]", y_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc1_factor[32]", tdc1_factor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc2_factor[32]", tdc2_factor);
      TGo4Parameter::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TTPCParameter(void *p) {
      return  p ? new(p) ::TTPCParameter : new ::TTPCParameter;
   }
   static void *newArray_TTPCParameter(Long_t nElements, void *p) {
      return p ? new(p) ::TTPCParameter[nElements] : new ::TTPCParameter[nElements];
   }
   // Wrapper around operator delete
   static void delete_TTPCParameter(void *p) {
      delete ((::TTPCParameter*)p);
   }
   static void deleteArray_TTPCParameter(void *p) {
      delete [] ((::TTPCParameter*)p);
   }
   static void destruct_TTPCParameter(void *p) {
      typedef ::TTPCParameter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TTPCParameter

//______________________________________________________________________________
void TMUSICParameter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMUSICParameter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMUSICParameter::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMUSICParameter::Class(),this);
   }
}

//______________________________________________________________________________
void TMUSICParameter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TMUSICParameter.
      TClass *R__cl = ::TMUSICParameter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "e1_off[8]", e1_off);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "e1_gain[8]", e1_gain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "e2_off[8]", e2_off);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "e2_gain[8]", e2_gain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "e3_off[4]", e3_off);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "e3_gain[4]", e3_gain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "b_selfcorr1", &b_selfcorr1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos_a1[7]", pos_a1);
      TGo4Parameter::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TMUSICParameter(void *p) {
      return  p ? new(p) ::TMUSICParameter : new ::TMUSICParameter;
   }
   static void *newArray_TMUSICParameter(Long_t nElements, void *p) {
      return p ? new(p) ::TMUSICParameter[nElements] : new ::TMUSICParameter[nElements];
   }
   // Wrapper around operator delete
   static void delete_TMUSICParameter(void *p) {
      delete ((::TMUSICParameter*)p);
   }
   static void deleteArray_TMUSICParameter(void *p) {
      delete [] ((::TMUSICParameter*)p);
   }
   static void destruct_TMUSICParameter(void *p) {
      typedef ::TMUSICParameter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TMUSICParameter

//______________________________________________________________________________
void TSCIParameter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSCIParameter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSCIParameter::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSCIParameter::Class(),this);
   }
}

//______________________________________________________________________________
void TSCIParameter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSCIParameter.
      TClass *R__cl = ::TSCIParameter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "le_a[2][12]", le_a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "re_a[2][12]", re_a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "le_veto_a[2][3]", le_veto_a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "re_veto_a[2][3]", re_veto_a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tac_factor[12]", tac_factor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tac_off[12]", tac_off);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x_a[7][12]", x_a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y5_a[7]", y5_a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tof_bll2", &tof_bll2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tof_brr2", &tof_brr2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tof_a2", &tof_a2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tof_bll3", &tof_bll3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tof_brr3", &tof_brr3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tof_a3", &tof_a3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tof_bll4", &tof_bll4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tof_brr4", &tof_brr4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tof_a4", &tof_a4);
      TGo4Parameter::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TSCIParameter(void *p) {
      return  p ? new(p) ::TSCIParameter : new ::TSCIParameter;
   }
   static void *newArray_TSCIParameter(Long_t nElements, void *p) {
      return p ? new(p) ::TSCIParameter[nElements] : new ::TSCIParameter[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSCIParameter(void *p) {
      delete ((::TSCIParameter*)p);
   }
   static void deleteArray_TSCIParameter(void *p) {
      delete [] ((::TSCIParameter*)p);
   }
   static void destruct_TSCIParameter(void *p) {
      typedef ::TSCIParameter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TSCIParameter

//______________________________________________________________________________
void TIDParameter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TIDParameter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TIDParameter::Class(),this);
   } else {
      R__b.WriteClassBuffer(TIDParameter::Class(),this);
   }
}

//______________________________________________________________________________
void TIDParameter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TIDParameter.
      TClass *R__cl = ::TIDParameter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x2_select", &x2_select);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x4_select", &x4_select);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x8_select", &x8_select);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id_tofoff2", &id_tofoff2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id_tofoff3", &id_tofoff3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id_tofoff4", &id_tofoff4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id_path2", &id_path2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id_path3", &id_path3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id_path4", &id_path4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id_tofcorr2", &id_tofcorr2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id_tofcorr3", &id_tofcorr3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id_tofcorr4", &id_tofcorr4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vel_a[4]", vel_a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vel_a2[4]", vel_a2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vel_a3[4]", vel_a3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zgate_low", &zgate_low);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zgate_high", &zgate_high);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ID_Z_AoverQ_num[5]", ID_Z_AoverQ_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ID_Z_AoverQ[5][5][2]", ID_Z_AoverQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ID_x2AoverQ_num[6]", ID_x2AoverQ_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ID_x2AoverQ[6][5][2]", ID_x2AoverQ);
      TGo4Parameter::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TIDParameter(void *p) {
      return  p ? new(p) ::TIDParameter : new ::TIDParameter;
   }
   static void *newArray_TIDParameter(Long_t nElements, void *p) {
      return p ? new(p) ::TIDParameter[nElements] : new ::TIDParameter[nElements];
   }
   // Wrapper around operator delete
   static void delete_TIDParameter(void *p) {
      delete ((::TIDParameter*)p);
   }
   static void deleteArray_TIDParameter(void *p) {
      delete [] ((::TIDParameter*)p);
   }
   static void destruct_TIDParameter(void *p) {
      typedef ::TIDParameter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TIDParameter

//______________________________________________________________________________
void TSIParameter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSIParameter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSIParameter::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSIParameter::Class(),this);
   }
}

//______________________________________________________________________________
void TSIParameter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSIParameter.
      TClass *R__cl = ::TSIParameter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "si_factor1", &si_factor1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "si_factor2", &si_factor2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "si_factor3", &si_factor3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "si_factor4", &si_factor4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "si_factor5", &si_factor5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "si_offset1", &si_offset1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "si_offset2", &si_offset2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "si_offset3", &si_offset3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "si_offset4", &si_offset4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "si_offset5", &si_offset5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dssd_offset[32]", dssd_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dssd_factor[32]", dssd_factor);
      TGo4Parameter::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TSIParameter(void *p) {
      return  p ? new(p) ::TSIParameter : new ::TSIParameter;
   }
   static void *newArray_TSIParameter(Long_t nElements, void *p) {
      return p ? new(p) ::TSIParameter[nElements] : new ::TSIParameter[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSIParameter(void *p) {
      delete ((::TSIParameter*)p);
   }
   static void deleteArray_TSIParameter(void *p) {
      delete [] ((::TSIParameter*)p);
   }
   static void destruct_TSIParameter(void *p) {
      typedef ::TSIParameter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TSIParameter

//______________________________________________________________________________
void TMRTOFMSParameter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TMRTOFMSParameter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TMRTOFMSParameter::Class(),this);
   } else {
      R__b.WriteClassBuffer(TMRTOFMSParameter::Class(),this);
   }
}

//______________________________________________________________________________
void TMRTOFMSParameter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TMRTOFMSParameter.
      TClass *R__cl = ::TMRTOFMSParameter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MRTOFMS_a", &MRTOFMS_a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MRTOFMS_b", &MRTOFMS_b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MRTOFMS_t0", &MRTOFMS_t0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MRTOFMS_TXRS", &MRTOFMS_TXRS);
      TGo4Parameter::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TMRTOFMSParameter(void *p) {
      return  p ? new(p) ::TMRTOFMSParameter : new ::TMRTOFMSParameter;
   }
   static void *newArray_TMRTOFMSParameter(Long_t nElements, void *p) {
      return p ? new(p) ::TMRTOFMSParameter[nElements] : new ::TMRTOFMSParameter[nElements];
   }
   // Wrapper around operator delete
   static void delete_TMRTOFMSParameter(void *p) {
      delete ((::TMRTOFMSParameter*)p);
   }
   static void deleteArray_TMRTOFMSParameter(void *p) {
      delete [] ((::TMRTOFMSParameter*)p);
   }
   static void destruct_TMRTOFMSParameter(void *p) {
      typedef ::TMRTOFMSParameter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TMRTOFMSParameter

namespace ROOTDict {
   void maplEintcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOintgR_Dictionary();
   static void *new_maplEintcOintgR(void *p = 0);
   static void *newArray_maplEintcOintgR(Long_t size, void *p);
   static void delete_maplEintcOintgR(void *p);
   static void deleteArray_maplEintcOintgR(void *p);
   static void destruct_maplEintcOintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,int>*)
   {
      map<int,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,int>", -2, "map2.dll", 0,
                  typeid(map<int,int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,int>) );
      instance.SetNew(&new_maplEintcOintgR);
      instance.SetNewArray(&newArray_maplEintcOintgR);
      instance.SetDelete(&delete_maplEintcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOintgR);
      instance.SetDestructor(&destruct_maplEintcOintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int> : new map<int,int>;
   }
   static void *newArray_maplEintcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int>[nElements] : new map<int,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOintgR(void *p) {
      delete ((map<int,int>*)p);
   }
   static void deleteArray_maplEintcOintgR(void *p) {
      delete [] ((map<int,int>*)p);
   }
   static void destruct_maplEintcOintgR(void *p) {
      typedef map<int,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,int>

namespace ROOTDict {
   void maplEintcOmaplEintcOintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOmaplEintcOintgRsPgR_Dictionary();
   static void *new_maplEintcOmaplEintcOintgRsPgR(void *p = 0);
   static void *newArray_maplEintcOmaplEintcOintgRsPgR(Long_t size, void *p);
   static void delete_maplEintcOmaplEintcOintgRsPgR(void *p);
   static void deleteArray_maplEintcOmaplEintcOintgRsPgR(void *p);
   static void destruct_maplEintcOmaplEintcOintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,map<int,int> >*)
   {
      map<int,map<int,int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,map<int,int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,map<int,int> >", -2, "/cvmfs/csee.gsi.de/root/534-36/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<int,map<int,int> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOmaplEintcOintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,map<int,int> >) );
      instance.SetNew(&new_maplEintcOmaplEintcOintgRsPgR);
      instance.SetNewArray(&newArray_maplEintcOmaplEintcOintgRsPgR);
      instance.SetDelete(&delete_maplEintcOmaplEintcOintgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOmaplEintcOintgRsPgR);
      instance.SetDestructor(&destruct_maplEintcOmaplEintcOintgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,map<int,int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,map<int,int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOmaplEintcOintgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,map<int,int> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOmaplEintcOintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,map<int,int> > : new map<int,map<int,int> >;
   }
   static void *newArray_maplEintcOmaplEintcOintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,map<int,int> >[nElements] : new map<int,map<int,int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOmaplEintcOintgRsPgR(void *p) {
      delete ((map<int,map<int,int> >*)p);
   }
   static void deleteArray_maplEintcOmaplEintcOintgRsPgR(void *p) {
      delete [] ((map<int,map<int,int> >*)p);
   }
   static void destruct_maplEintcOmaplEintcOintgRsPgR(void *p) {
      typedef map<int,map<int,int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,map<int,int> >

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/cvmfs/csee.gsi.de/root/534-36/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

namespace ROOTDict {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "/cvmfs/csee.gsi.de/root/534-36/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<string>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<string>

/********************************************************
* G__SCN.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__SCN();

extern "C" void G__set_cpp_environmentG__SCN() {
  G__cpp_reset_tagtableG__SCN();
}
#include <new>
extern "C" int G__cpp_dllrevG__SCN() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TSCNParameter */
static int G__G__SCN_534_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNParameter* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNParameter((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TSCNParameter((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TSCNParameter[n];
       } else {
         p = new((void*) gvp) TSCNParameter[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TSCNParameter;
       } else {
         p = new((void*) gvp) TSCNParameter;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_534_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSCNParameter*) G__getstructoffset())->SetPedestal((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_534_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSCNParameter*) G__getstructoffset())->SetFactor((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_534_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSCNParameter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_534_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNParameter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_534_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSCNParameter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_534_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSCNParameter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_534_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSCNParameter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_534_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNParameter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_534_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNParameter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_534_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNParameter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_534_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNParameter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_534_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSCNParameter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSCNParameter(*(TSCNParameter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSCNParameter G__TTSCNParameter;
static int G__G__SCN_534_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSCNParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSCNParameter*) (soff+(sizeof(TSCNParameter)*i)))->~G__TTSCNParameter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSCNParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSCNParameter*) (soff))->~G__TTSCNParameter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SCN_534_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNParameter* dest = (TSCNParameter*) G__getstructoffset();
   *dest = *(TSCNParameter*) libp->para[0].ref;
   const TSCNParameter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TXRSParameter */
static int G__G__SCN_643_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TXRSParameter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TXRSParameter[n];
     } else {
       p = new((void*) gvp) TXRSParameter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TXRSParameter;
     } else {
       p = new((void*) gvp) TXRSParameter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TXRSParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_643_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TXRSParameter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TXRSParameter((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TXRSParameter((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TXRSParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_643_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TXRSParameter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_643_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXRSParameter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_643_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TXRSParameter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_643_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TXRSParameter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_643_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TXRSParameter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_643_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXRSParameter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_643_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TXRSParameter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_643_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TXRSParameter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_643_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TXRSParameter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_643_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TXRSParameter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TXRSParameter(*(TXRSParameter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TXRSParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TXRSParameter G__TTXRSParameter;
static int G__G__SCN_643_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TXRSParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TXRSParameter*) (soff+(sizeof(TXRSParameter)*i)))->~G__TTXRSParameter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TXRSParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TXRSParameter*) (soff))->~G__TTXRSParameter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SCN_643_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TXRSParameter* dest = (TXRSParameter*) G__getstructoffset();
   *dest = *(TXRSParameter*) libp->para[0].ref;
   const TXRSParameter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Map1 */
static int G__G__SCN_644_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Map1* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Map1[n];
     } else {
       p = new((void*) gvp) Map1[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Map1;
     } else {
       p = new((void*) gvp) Map1;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_Map1));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_644_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Map1* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Map1((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) Map1((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_Map1));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_644_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Map1::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_644_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Map1::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_644_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Map1::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_644_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Map1::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_644_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Map1*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_644_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Map1::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_644_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Map1::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_644_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Map1::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_644_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Map1::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_644_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Map1* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Map1(*(Map1*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_Map1));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Map1 G__TMap1;
static int G__G__SCN_644_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Map1*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Map1*) (soff+(sizeof(Map1)*i)))->~G__TMap1();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Map1*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Map1*) (soff))->~G__TMap1();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SCN_644_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Map1* dest = (Map1*) G__getstructoffset();
   *dest = *(Map1*) libp->para[0].ref;
   const Map1& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TModParameter */
static int G__G__SCN_645_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TModParameter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TModParameter[n];
     } else {
       p = new((void*) gvp) TModParameter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TModParameter;
     } else {
       p = new((void*) gvp) TModParameter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TModParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_645_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TModParameter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TModParameter((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TModParameter((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TModParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_645_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TModParameter*) G__getstructoffset())->setMap();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_645_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TModParameter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_645_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TModParameter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_645_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TModParameter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_645_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TModParameter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_645_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TModParameter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_645_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TModParameter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_645_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TModParameter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_645_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TModParameter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_645_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TModParameter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TModParameter G__TTModParameter;
static int G__G__SCN_645_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TModParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TModParameter*) (soff+(sizeof(TModParameter)*i)))->~G__TTModParameter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TModParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TModParameter*) (soff))->~G__TTModParameter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMWParameter */
static int G__G__SCN_661_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMWParameter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMWParameter[n];
     } else {
       p = new((void*) gvp) TMWParameter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMWParameter;
     } else {
       p = new((void*) gvp) TMWParameter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TMWParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_661_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMWParameter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TMWParameter((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TMWParameter((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TMWParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_661_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMWParameter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_661_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMWParameter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_661_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMWParameter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_661_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMWParameter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_661_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMWParameter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_661_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMWParameter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_661_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMWParameter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_661_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMWParameter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_661_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMWParameter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_661_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMWParameter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMWParameter(*(TMWParameter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TMWParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMWParameter G__TTMWParameter;
static int G__G__SCN_661_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMWParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMWParameter*) (soff+(sizeof(TMWParameter)*i)))->~G__TTMWParameter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMWParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMWParameter*) (soff))->~G__TTMWParameter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SCN_661_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMWParameter* dest = (TMWParameter*) G__getstructoffset();
   *dest = *(TMWParameter*) libp->para[0].ref;
   const TMWParameter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TTPCParameter */
static int G__G__SCN_662_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTPCParameter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTPCParameter[n];
     } else {
       p = new((void*) gvp) TTPCParameter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTPCParameter;
     } else {
       p = new((void*) gvp) TTPCParameter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TTPCParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_662_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTPCParameter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TTPCParameter((const Text_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TTPCParameter((const Text_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TTPCParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_662_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TTPCParameter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_662_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTPCParameter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_662_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TTPCParameter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_662_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TTPCParameter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_662_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTPCParameter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_662_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTPCParameter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_662_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTPCParameter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_662_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTPCParameter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_662_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTPCParameter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_662_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TTPCParameter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TTPCParameter(*(TTPCParameter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TTPCParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTPCParameter G__TTTPCParameter;
static int G__G__SCN_662_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TTPCParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TTPCParameter*) (soff+(sizeof(TTPCParameter)*i)))->~G__TTTPCParameter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TTPCParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TTPCParameter*) (soff))->~G__TTTPCParameter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SCN_662_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTPCParameter* dest = (TTPCParameter*) G__getstructoffset();
   *dest = *(TTPCParameter*) libp->para[0].ref;
   const TTPCParameter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMUSICParameter */
static int G__G__SCN_663_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMUSICParameter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMUSICParameter[n];
     } else {
       p = new((void*) gvp) TMUSICParameter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMUSICParameter;
     } else {
       p = new((void*) gvp) TMUSICParameter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TMUSICParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_663_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMUSICParameter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TMUSICParameter((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TMUSICParameter((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TMUSICParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_663_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMUSICParameter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_663_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMUSICParameter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_663_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMUSICParameter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_663_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMUSICParameter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_663_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMUSICParameter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_663_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMUSICParameter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_663_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMUSICParameter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_663_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMUSICParameter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_663_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMUSICParameter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_663_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMUSICParameter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMUSICParameter(*(TMUSICParameter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TMUSICParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMUSICParameter G__TTMUSICParameter;
static int G__G__SCN_663_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMUSICParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMUSICParameter*) (soff+(sizeof(TMUSICParameter)*i)))->~G__TTMUSICParameter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMUSICParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMUSICParameter*) (soff))->~G__TTMUSICParameter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SCN_663_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMUSICParameter* dest = (TMUSICParameter*) G__getstructoffset();
   *dest = *(TMUSICParameter*) libp->para[0].ref;
   const TMUSICParameter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSCIParameter */
static int G__G__SCN_664_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCIParameter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCIParameter[n];
     } else {
       p = new((void*) gvp) TSCIParameter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCIParameter;
     } else {
       p = new((void*) gvp) TSCIParameter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCIParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_664_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCIParameter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSCIParameter((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSCIParameter((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCIParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_664_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSCIParameter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_664_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCIParameter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_664_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSCIParameter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_664_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSCIParameter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_664_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSCIParameter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_664_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCIParameter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_664_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCIParameter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_664_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCIParameter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_664_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCIParameter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_664_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSCIParameter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSCIParameter(*(TSCIParameter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCIParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSCIParameter G__TTSCIParameter;
static int G__G__SCN_664_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSCIParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSCIParameter*) (soff+(sizeof(TSCIParameter)*i)))->~G__TTSCIParameter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSCIParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSCIParameter*) (soff))->~G__TTSCIParameter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SCN_664_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCIParameter* dest = (TSCIParameter*) G__getstructoffset();
   *dest = *(TSCIParameter*) libp->para[0].ref;
   const TSCIParameter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TIDParameter */
static int G__G__SCN_665_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TIDParameter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TIDParameter[n];
     } else {
       p = new((void*) gvp) TIDParameter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TIDParameter;
     } else {
       p = new((void*) gvp) TIDParameter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TIDParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_665_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TIDParameter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TIDParameter((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TIDParameter((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TIDParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_665_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TIDParameter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_665_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TIDParameter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_665_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TIDParameter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_665_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TIDParameter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_665_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TIDParameter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_665_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TIDParameter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_665_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TIDParameter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_665_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TIDParameter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_665_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TIDParameter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_665_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TIDParameter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TIDParameter(*(TIDParameter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TIDParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TIDParameter G__TTIDParameter;
static int G__G__SCN_665_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TIDParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TIDParameter*) (soff+(sizeof(TIDParameter)*i)))->~G__TTIDParameter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TIDParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TIDParameter*) (soff))->~G__TTIDParameter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SCN_665_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TIDParameter* dest = (TIDParameter*) G__getstructoffset();
   *dest = *(TIDParameter*) libp->para[0].ref;
   const TIDParameter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSIParameter */
static int G__G__SCN_666_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSIParameter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSIParameter[n];
     } else {
       p = new((void*) gvp) TSIParameter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSIParameter;
     } else {
       p = new((void*) gvp) TSIParameter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSIParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_666_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSIParameter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSIParameter((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSIParameter((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSIParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_666_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSIParameter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_666_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSIParameter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_666_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSIParameter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_666_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSIParameter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_666_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSIParameter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_666_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSIParameter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_666_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSIParameter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_666_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSIParameter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_666_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSIParameter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_666_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSIParameter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSIParameter(*(TSIParameter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSIParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSIParameter G__TTSIParameter;
static int G__G__SCN_666_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSIParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSIParameter*) (soff+(sizeof(TSIParameter)*i)))->~G__TTSIParameter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSIParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSIParameter*) (soff))->~G__TTSIParameter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SCN_666_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSIParameter* dest = (TSIParameter*) G__getstructoffset();
   *dest = *(TSIParameter*) libp->para[0].ref;
   const TSIParameter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TMRTOFMSParameter */
static int G__G__SCN_667_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMRTOFMSParameter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMRTOFMSParameter[n];
     } else {
       p = new((void*) gvp) TMRTOFMSParameter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TMRTOFMSParameter;
     } else {
       p = new((void*) gvp) TMRTOFMSParameter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TMRTOFMSParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_667_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMRTOFMSParameter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TMRTOFMSParameter((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TMRTOFMSParameter((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TMRTOFMSParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_667_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TMRTOFMSParameter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_667_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMRTOFMSParameter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_667_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TMRTOFMSParameter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_667_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TMRTOFMSParameter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_667_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TMRTOFMSParameter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_667_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMRTOFMSParameter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_667_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMRTOFMSParameter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_667_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TMRTOFMSParameter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_667_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TMRTOFMSParameter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_667_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TMRTOFMSParameter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TMRTOFMSParameter(*(TMRTOFMSParameter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TMRTOFMSParameter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TMRTOFMSParameter G__TTMRTOFMSParameter;
static int G__G__SCN_667_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TMRTOFMSParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TMRTOFMSParameter*) (soff+(sizeof(TMRTOFMSParameter)*i)))->~G__TTMRTOFMSParameter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TMRTOFMSParameter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TMRTOFMSParameter*) (soff))->~G__TTMRTOFMSParameter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SCN_667_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TMRTOFMSParameter* dest = (TMRTOFMSParameter*) G__getstructoffset();
   *dest = *(TMRTOFMSParameter*) libp->para[0].ref;
   const TMRTOFMSParameter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSCNUnpackEvent */
static int G__G__SCN_788_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNUnpackEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNUnpackEvent[n];
     } else {
       p = new((void*) gvp) TSCNUnpackEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNUnpackEvent;
     } else {
       p = new((void*) gvp) TSCNUnpackEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_788_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNUnpackEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSCNUnpackEvent((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSCNUnpackEvent((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_788_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSCNUnpackEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_788_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNUnpackEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_788_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSCNUnpackEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_788_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSCNUnpackEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_788_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSCNUnpackEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_788_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNUnpackEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_788_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNUnpackEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_788_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNUnpackEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_788_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNUnpackEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_788_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSCNUnpackEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSCNUnpackEvent(*(TSCNUnpackEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSCNUnpackEvent G__TTSCNUnpackEvent;
static int G__G__SCN_788_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSCNUnpackEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSCNUnpackEvent*) (soff+(sizeof(TSCNUnpackEvent)*i)))->~G__TTSCNUnpackEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSCNUnpackEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSCNUnpackEvent*) (soff))->~G__TTSCNUnpackEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SCN_788_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNUnpackEvent* dest = (TSCNUnpackEvent*) G__getstructoffset();
   *dest = *(TSCNUnpackEvent*) libp->para[0].ref;
   const TSCNUnpackEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSCNUnpackProc */
static int G__G__SCN_816_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNUnpackProc* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNUnpackProc[n];
     } else {
       p = new((void*) gvp) TSCNUnpackProc[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNUnpackProc;
     } else {
       p = new((void*) gvp) TSCNUnpackProc;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_816_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNUnpackProc* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSCNUnpackProc((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSCNUnpackProc((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_816_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSCNUnpackProc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_816_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNUnpackProc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_816_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSCNUnpackProc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_816_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSCNUnpackProc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_816_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSCNUnpackProc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_816_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNUnpackProc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_816_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNUnpackProc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_816_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNUnpackProc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_816_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNUnpackProc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_816_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSCNUnpackProc* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSCNUnpackProc(*(TSCNUnpackProc*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSCNUnpackProc G__TTSCNUnpackProc;
static int G__G__SCN_816_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSCNUnpackProc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSCNUnpackProc*) (soff+(sizeof(TSCNUnpackProc)*i)))->~G__TTSCNUnpackProc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSCNUnpackProc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSCNUnpackProc*) (soff))->~G__TTSCNUnpackProc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSCNCalEvent */
static int G__G__SCN_818_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNCalEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNCalEvent[n];
     } else {
       p = new((void*) gvp) TSCNCalEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNCalEvent;
     } else {
       p = new((void*) gvp) TSCNCalEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_818_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNCalEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSCNCalEvent((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSCNCalEvent((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_818_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSCNCalEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_818_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNCalEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_818_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSCNCalEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_818_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSCNCalEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_818_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSCNCalEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_818_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNCalEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_818_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNCalEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_818_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNCalEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_818_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNCalEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_818_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSCNCalEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSCNCalEvent(*(TSCNCalEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSCNCalEvent G__TTSCNCalEvent;
static int G__G__SCN_818_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSCNCalEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSCNCalEvent*) (soff+(sizeof(TSCNCalEvent)*i)))->~G__TTSCNCalEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSCNCalEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSCNCalEvent*) (soff))->~G__TTSCNCalEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SCN_818_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNCalEvent* dest = (TSCNCalEvent*) G__getstructoffset();
   *dest = *(TSCNCalEvent*) libp->para[0].ref;
   const TSCNCalEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSCNAnlEvent */
static int G__G__SCN_819_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNAnlEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNAnlEvent[n];
     } else {
       p = new((void*) gvp) TSCNAnlEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNAnlEvent;
     } else {
       p = new((void*) gvp) TSCNAnlEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_819_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNAnlEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSCNAnlEvent((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSCNAnlEvent((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_819_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSCNAnlEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_819_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNAnlEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_819_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSCNAnlEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_819_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSCNAnlEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_819_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSCNAnlEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_819_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNAnlEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_819_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNAnlEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_819_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNAnlEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_819_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNAnlEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_819_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSCNAnlEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSCNAnlEvent(*(TSCNAnlEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSCNAnlEvent G__TTSCNAnlEvent;
static int G__G__SCN_819_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSCNAnlEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSCNAnlEvent*) (soff+(sizeof(TSCNAnlEvent)*i)))->~G__TTSCNAnlEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSCNAnlEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSCNAnlEvent*) (soff))->~G__TTSCNAnlEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SCN_819_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNAnlEvent* dest = (TSCNAnlEvent*) G__getstructoffset();
   *dest = *(TSCNAnlEvent*) libp->para[0].ref;
   const TSCNAnlEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSCNAnalysis */
static int G__G__SCN_820_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNAnalysis* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNAnalysis[n];
     } else {
       p = new((void*) gvp) TSCNAnalysis[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNAnalysis;
     } else {
       p = new((void*) gvp) TSCNAnalysis;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_820_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNAnalysis* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSCNAnalysis((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TSCNAnalysis((int) G__int(libp->para[0]), (char**) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_820_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSCNAnalysis::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_820_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNAnalysis::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_820_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSCNAnalysis::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_820_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSCNAnalysis::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_820_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSCNAnalysis*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_820_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNAnalysis::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_820_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNAnalysis::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_820_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNAnalysis::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_820_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNAnalysis::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_820_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSCNAnalysis* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSCNAnalysis(*(TSCNAnalysis*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSCNAnalysis G__TTSCNAnalysis;
static int G__G__SCN_820_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSCNAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSCNAnalysis*) (soff+(sizeof(TSCNAnalysis)*i)))->~G__TTSCNAnalysis();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSCNAnalysis*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSCNAnalysis*) (soff))->~G__TTSCNAnalysis();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SCN_820_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNAnalysis* dest = (TSCNAnalysis*) G__getstructoffset();
   *dest = *(TSCNAnalysis*) libp->para[0].ref;
   const TSCNAnalysis& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSCNAnlProc */
static int G__G__SCN_821_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNAnlProc* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNAnlProc[n];
     } else {
       p = new((void*) gvp) TSCNAnlProc[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNAnlProc;
     } else {
       p = new((void*) gvp) TSCNAnlProc;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_821_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNAnlProc* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSCNAnlProc((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSCNAnlProc((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_821_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSCNAnlProc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_821_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNAnlProc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_821_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSCNAnlProc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_821_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSCNAnlProc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_821_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSCNAnlProc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_821_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNAnlProc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_821_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNAnlProc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_821_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNAnlProc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_821_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNAnlProc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_821_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSCNAnlProc* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSCNAnlProc(*(TSCNAnlProc*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSCNAnlProc G__TTSCNAnlProc;
static int G__G__SCN_821_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSCNAnlProc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSCNAnlProc*) (soff+(sizeof(TSCNAnlProc)*i)))->~G__TTSCNAnlProc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSCNAnlProc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSCNAnlProc*) (soff))->~G__TTSCNAnlProc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SCN_821_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNAnlProc* dest = (TSCNAnlProc*) G__getstructoffset();
   *dest = *(TSCNAnlProc*) libp->para[0].ref;
   const TSCNAnlProc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSCNCalProc */
static int G__G__SCN_822_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNCalProc* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNCalProc[n];
     } else {
       p = new((void*) gvp) TSCNCalProc[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSCNCalProc;
     } else {
       p = new((void*) gvp) TSCNCalProc;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_822_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNCalProc* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSCNCalProc((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSCNCalProc((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_822_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSCNCalProc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_822_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNCalProc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_822_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSCNCalProc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_822_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSCNCalProc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_822_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSCNCalProc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_822_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNCalProc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_822_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNCalProc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_822_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSCNCalProc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__SCN_822_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSCNCalProc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__G__SCN_822_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSCNCalProc* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSCNCalProc(*(TSCNCalProc*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSCNCalProc G__TTSCNCalProc;
static int G__G__SCN_822_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSCNCalProc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSCNCalProc*) (soff+(sizeof(TSCNCalProc)*i)))->~G__TTSCNCalProc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSCNCalProc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSCNCalProc*) (soff))->~G__TTSCNCalProc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__G__SCN_822_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSCNCalProc* dest = (TSCNCalProc*) G__getstructoffset();
   *dest = *(TSCNCalProc*) libp->para[0].ref;
   const TSCNCalProc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TSCNParameter */

/* TXRSParameter */

/* Map1 */

/* TModParameter */

/* TMWParameter */

/* TTPCParameter */

/* TMUSICParameter */

/* TSCIParameter */

/* TIDParameter */

/* TSIParameter */

/* TMRTOFMSParameter */

/* TSCNUnpackEvent */

/* TSCNUnpackProc */

/* TSCNCalEvent */

/* TSCNAnlEvent */

/* TSCNAnalysis */

/* TSCNAnlProc */

/* TSCNCalProc */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__SCN {
 public:
  G__Sizep2memfuncG__SCN(): p(&G__Sizep2memfuncG__SCN::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__SCN::*p)();
};

size_t G__get_sizep2memfuncG__SCN()
{
  G__Sizep2memfuncG__SCN a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__SCN() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter))) {
     TSCNParameter *G__Lderived;
     G__Lderived=(TSCNParameter*)0x1000;
     {
       TGo4Parameter *G__Lpbase=(TGo4Parameter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter),G__get_linked_tagnum(&G__G__SCNLN_TGo4Parameter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter),G__get_linked_tagnum(&G__G__SCNLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TXRSParameter))) {
     TXRSParameter *G__Lderived;
     G__Lderived=(TXRSParameter*)0x1000;
     {
       TGo4Parameter *G__Lpbase=(TGo4Parameter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TXRSParameter),G__get_linked_tagnum(&G__G__SCNLN_TGo4Parameter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TXRSParameter),G__get_linked_tagnum(&G__G__SCNLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TXRSParameter),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_Map1))) {
     Map1 *G__Lderived;
     G__Lderived=(Map1*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_Map1),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TModParameter))) {
     TModParameter *G__Lderived;
     G__Lderived=(TModParameter*)0x1000;
     {
       TGo4Parameter *G__Lpbase=(TGo4Parameter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TModParameter),G__get_linked_tagnum(&G__G__SCNLN_TGo4Parameter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TModParameter),G__get_linked_tagnum(&G__G__SCNLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TModParameter),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TMWParameter))) {
     TMWParameter *G__Lderived;
     G__Lderived=(TMWParameter*)0x1000;
     {
       TGo4Parameter *G__Lpbase=(TGo4Parameter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TMWParameter),G__get_linked_tagnum(&G__G__SCNLN_TGo4Parameter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TMWParameter),G__get_linked_tagnum(&G__G__SCNLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TMWParameter),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TTPCParameter))) {
     TTPCParameter *G__Lderived;
     G__Lderived=(TTPCParameter*)0x1000;
     {
       TGo4Parameter *G__Lpbase=(TGo4Parameter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TTPCParameter),G__get_linked_tagnum(&G__G__SCNLN_TGo4Parameter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TTPCParameter),G__get_linked_tagnum(&G__G__SCNLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TTPCParameter),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TMUSICParameter))) {
     TMUSICParameter *G__Lderived;
     G__Lderived=(TMUSICParameter*)0x1000;
     {
       TGo4Parameter *G__Lpbase=(TGo4Parameter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TMUSICParameter),G__get_linked_tagnum(&G__G__SCNLN_TGo4Parameter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TMUSICParameter),G__get_linked_tagnum(&G__G__SCNLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TMUSICParameter),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TSCIParameter))) {
     TSCIParameter *G__Lderived;
     G__Lderived=(TSCIParameter*)0x1000;
     {
       TGo4Parameter *G__Lpbase=(TGo4Parameter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCIParameter),G__get_linked_tagnum(&G__G__SCNLN_TGo4Parameter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCIParameter),G__get_linked_tagnum(&G__G__SCNLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCIParameter),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TIDParameter))) {
     TIDParameter *G__Lderived;
     G__Lderived=(TIDParameter*)0x1000;
     {
       TGo4Parameter *G__Lpbase=(TGo4Parameter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TIDParameter),G__get_linked_tagnum(&G__G__SCNLN_TGo4Parameter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TIDParameter),G__get_linked_tagnum(&G__G__SCNLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TIDParameter),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TSIParameter))) {
     TSIParameter *G__Lderived;
     G__Lderived=(TSIParameter*)0x1000;
     {
       TGo4Parameter *G__Lpbase=(TGo4Parameter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSIParameter),G__get_linked_tagnum(&G__G__SCNLN_TGo4Parameter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSIParameter),G__get_linked_tagnum(&G__G__SCNLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSIParameter),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TMRTOFMSParameter))) {
     TMRTOFMSParameter *G__Lderived;
     G__Lderived=(TMRTOFMSParameter*)0x1000;
     {
       TGo4Parameter *G__Lpbase=(TGo4Parameter*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TMRTOFMSParameter),G__get_linked_tagnum(&G__G__SCNLN_TGo4Parameter),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TMRTOFMSParameter),G__get_linked_tagnum(&G__G__SCNLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TMRTOFMSParameter),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent))) {
     TSCNUnpackEvent *G__Lderived;
     G__Lderived=(TSCNUnpackEvent*)0x1000;
     {
       TGo4EventElement *G__Lpbase=(TGo4EventElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent),G__get_linked_tagnum(&G__G__SCNLN_TGo4EventElement),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent),G__get_linked_tagnum(&G__G__SCNLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc))) {
     TSCNUnpackProc *G__Lderived;
     G__Lderived=(TSCNUnpackProc*)0x1000;
     {
       TGo4EventProcessor *G__Lpbase=(TGo4EventProcessor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc),G__get_linked_tagnum(&G__G__SCNLN_TGo4EventProcessor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGo4EventSource *G__Lpbase=(TGo4EventSource*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc),G__get_linked_tagnum(&G__G__SCNLN_TGo4EventSource),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc),G__get_linked_tagnum(&G__G__SCNLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent))) {
     TSCNCalEvent *G__Lderived;
     G__Lderived=(TSCNCalEvent*)0x1000;
     {
       TGo4EventElement *G__Lpbase=(TGo4EventElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent),G__get_linked_tagnum(&G__G__SCNLN_TGo4EventElement),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent),G__get_linked_tagnum(&G__G__SCNLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent))) {
     TSCNAnlEvent *G__Lderived;
     G__Lderived=(TSCNAnlEvent*)0x1000;
     {
       TGo4EventElement *G__Lpbase=(TGo4EventElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent),G__get_linked_tagnum(&G__G__SCNLN_TGo4EventElement),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent),G__get_linked_tagnum(&G__G__SCNLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis))) {
     TSCNAnalysis *G__Lderived;
     G__Lderived=(TSCNAnalysis*)0x1000;
     {
       TGo4Analysis *G__Lpbase=(TGo4Analysis*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis),G__get_linked_tagnum(&G__G__SCNLN_TGo4Analysis),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGo4CommandReceiver *G__Lpbase=(TGo4CommandReceiver*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis),G__get_linked_tagnum(&G__G__SCNLN_TGo4CommandReceiver),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc))) {
     TSCNAnlProc *G__Lderived;
     G__Lderived=(TSCNAnlProc*)0x1000;
     {
       TGo4EventProcessor *G__Lpbase=(TGo4EventProcessor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc),G__get_linked_tagnum(&G__G__SCNLN_TGo4EventProcessor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGo4EventSource *G__Lpbase=(TGo4EventSource*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc),G__get_linked_tagnum(&G__G__SCNLN_TGo4EventSource),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc),G__get_linked_tagnum(&G__G__SCNLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc))) {
     TSCNCalProc *G__Lderived;
     G__Lderived=(TSCNCalProc*)0x1000;
     {
       TGo4EventProcessor *G__Lpbase=(TGo4EventProcessor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc),G__get_linked_tagnum(&G__G__SCNLN_TGo4EventProcessor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGo4EventSource *G__Lpbase=(TGo4EventSource*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc),G__get_linked_tagnum(&G__G__SCNLN_TGo4EventSource),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc),G__get_linked_tagnum(&G__G__SCNLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc),G__get_linked_tagnum(&G__G__SCNLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__SCN() {

   /* Setting up typedef entry */
   G__search_typename2("Text_t",99,-1,0,-1);
   G__setnewtype(-1,"General string (char)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__SCNLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__SCNLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__SCNLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__SCNLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__SCNLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__SCNLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__SCNLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__SCNLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__SCNLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__SCNLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__SCNLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__SCNLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__SCNLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__SCNLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__SCNLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__G__SCNLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__G__SCNLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__G__SCNLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__SCNLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__SCNLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__SCNLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__SCNLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,std::map<int,int> >",117,G__get_linked_tagnum(&G__G__SCNLN_maplEintcOmaplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,map<int,int,less<int>,allocator<pair<const int,int> > > >",117,G__get_linked_tagnum(&G__G__SCNLN_maplEintcOmaplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,map<int,int,less<int>,allocator<pair<const int,int> > >,less<int> >",117,G__get_linked_tagnum(&G__G__SCNLN_maplEintcOmaplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__G__SCNLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__G__SCNLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__SCNLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__SCNLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__SCNLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__SCNLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__G__SCNLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__G__SCNLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__G__SCNLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__G__SCNLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__SCNLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__G__SCNLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__G__SCNLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::pair<int,int>,int>",117,G__get_linked_tagnum(&G__G__SCNLN_maplEpairlEintcOintgRcOintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,int>,int>",117,G__get_linked_tagnum(&G__G__SCNLN_maplEpairlEintcOintgRcOintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,int>,int>",117,G__get_linked_tagnum(&G__G__SCNLN_maplEpairlEintcOintgRcOintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<int,int>,int,less<pair<int,int> > >",117,G__get_linked_tagnum(&G__G__SCNLN_maplEpairlEintcOintgRcOintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TSCNParameter */
static void G__setup_memvarTSCNParameter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter));
   { TSCNParameter *p; p=(TSCNParameter*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Pedestals)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Pedestals[32]=",0,"Pedestals ");
   G__memvar_setup((void*)((long)(&p->Factors)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Factors[32]=",0,"Gain  factors");
   G__memvar_setup((void*)((long)(&p->peak_alg)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"peak_alg=",0,"0 for centroid, 1 for Lerche");
   G__memvar_setup((void*)((long)(&p->Anodes_Low)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Anodes_Low=",0,"Lower treshold for anodes sum");
   G__memvar_setup((void*)((long)(&p->Anodes_High)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Anodes_High=",0,"Upper treshold for anodes sum");
   G__memvar_setup((void*)((long)(&p->QDC2Ch0_Low)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"QDC2Ch0_Low=",0,"Lower treshhold for qdc2 chan. 1");
   G__memvar_setup((void*)((long)(&p->QDC2Ch0_High)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"QDC2Ch0_High=",0,"Upper treshhold for qdc2 chan. 1");
   G__memvar_setup((void*)((long)(&p->QDC2Ch1_Low)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"QDC2Ch1_Low=",0,"Lower treshhold for qdc2 chan. 2");
   G__memvar_setup((void*)((long)(&p->QDC2Ch1_High)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"QDC2Ch1_High=",0,"Upper treshhold for qdc2 chan. 2");
   G__memvar_setup((void*)((long)(&p->ClusterCh0_Low)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ClusterCh0_Low=",0,"Lower treshhold for cluster chan. 1");
   G__memvar_setup((void*)((long)(&p->ClusterCh0_High)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ClusterCh0_High=",0,"Upper treshhold for cluster chan. 1");
   G__memvar_setup((void*)((long)(&p->NaI_F)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"NaI_F=",0,"If I have NaI detectors");
   G__memvar_setup((void*)((long)(&p->Cluster_F)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"Cluster_F=",0,"If I have the cluster");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TXRSParameter */
static void G__setup_memvarTXRSParameter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TXRSParameter));
   { TXRSParameter *p; p=(TXRSParameter*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fill_raw_histos)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fill_raw_histos=",0,"fill raw histograms in unpack step");
   G__memvar_setup((void*)((long)(&p->after_run176)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"after_run176=",0,"adapt cable-swapping at run176");
   G__memvar_setup((void*)((long)(&p->max_scaler)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"max_scaler=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dist_focS2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_focS2=",0,"All distances from    */");
   G__memvar_setup((void*)((long)(&p->dist_MW21)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_MW21=",0,"TS3QT33         */");
   G__memvar_setup((void*)((long)(&p->dist_MW22)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_MW22=",0,"*/");
   G__memvar_setup((void*)((long)(&p->dist_SC21)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_SC21=",0,"in mm          */");
   G__memvar_setup((void*)((long)(&p->dist_SC22)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_SC22=",0,"in mm          */");
   G__memvar_setup((void*)((long)(&p->dist_TPC3)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_TPC3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dist_TPC4)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_TPC4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dist_focS4)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_focS4=",0,"All distances from    */");
   G__memvar_setup((void*)((long)(&p->dist_MW41)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_MW41=",0,"HFSQT13          */");
   G__memvar_setup((void*)((long)(&p->dist_MW42)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_MW42=",0,"*/");
   G__memvar_setup((void*)((long)(&p->dist_MW43)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_MW43=",0,"*/");
   G__memvar_setup((void*)((long)(&p->dist_SC41)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_SC41=",0,"in mm          */");
   G__memvar_setup((void*)((long)(&p->dist_SC42)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_SC42=",0,"in mm          */");
   G__memvar_setup((void*)((long)(&p->dist_SC43)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_SC43=",0,"in mm          */");
   G__memvar_setup((void*)((long)(&p->dist_itag_42)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_itag_42=",0,"in mm          */");
   G__memvar_setup((void*)((long)(&p->dist_itag_43)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_itag_43=",0,"in mm          */");
   G__memvar_setup((void*)((long)(&p->dist_itag_stopper)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_itag_stopper=",0,"in mm          */");
   G__memvar_setup((void*)((long)(&p->dist_TPC1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_TPC1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dist_TPC2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_TPC2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dist_TPC5)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_TPC5=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dist_TPC6)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_TPC6=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dist_MUSICa1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_MUSICa1=",0,"MUSIC(window-anode1) */");
   G__memvar_setup((void*)((long)(&p->dist_MUSICa2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_MUSICa2=",0,"MUSIC(window-anode2) */");
   G__memvar_setup((void*)((long)(&p->dist_MUSICa3)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_MUSICa3=",0,"MUSIC(window-anode3) */");
   G__memvar_setup((void*)((long)(&p->dist_MUSICa4)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_MUSICa4=",0,"MUSIC(window-anode4) */");
   G__memvar_setup((void*)((long)(&p->dist_MUSIC1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_MUSIC1=",0,"MUSIC1               */");
   G__memvar_setup((void*)((long)(&p->dist_MUSIC2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_MUSIC2=",0,"MUSIC2               */");
   G__memvar_setup((void*)((long)(&p->dist_MUSIC3)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_MUSIC3=",0,"MUSIC3               */");
   G__memvar_setup((void*)((long)(&p->dist_focS8)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_focS8=",0,"All distances from    */");
   G__memvar_setup((void*)((long)(&p->dist_MW81)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_MW81=",0,"TS????          */");
   G__memvar_setup((void*)((long)(&p->dist_MW82)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_MW82=",0,"*/");
   G__memvar_setup((void*)((long)(&p->dist_SC81)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dist_SC81=",0,"in mm          */");
   G__memvar_setup((void*)((long)(&p->dispersion)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dispersion[7]=",0,"d* Disp. S0-S2,S2-S4  */");
   G__memvar_setup((void*)((long)(&p->magnification)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"magnification[7]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bfield)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"bfield[7]=",0,"D1/D2 D3/D4 Feld      */");
   G__memvar_setup((void*)((long)(&p->rho0)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"rho0[7]=",0,"S2/4 Sollbahnradius s */");
   G__memvar_setup((void*)((long)(&p->primary_z)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"primary_z=",0,"Z of primary beam     */");
   G__memvar_setup((void*)((long)(&p->offset_z)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"offset_z=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->offset_z2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"offset_z2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->offset_z3)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"offset_z3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a2AoQCorr)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"a2AoQCorr=",0,"Correction of AoQ based on S2 angle in x */");
   G__memvar_setup((void*)((long)(&p->a4AoQCorr)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"a4AoQCorr=",0,"Correction of AoQ based on S4 angle in x */");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Map1 */
static void G__setup_memvarMap1(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_Map1));
   { Map1 *p; p=(Map1*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->map)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SCNLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,1,"map=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TModParameter */
static void G__setup_memvarTModParameter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TModParameter));
   { TModParameter *p; p=(TModParameter*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Nb_Modules)-(long)(p)),105,0,0,-1,-1,-1,1,"Nb_Modules=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Nb_QDC)-(long)(p)),105,0,0,-1,-1,-1,1,"Nb_QDC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Nb_ADC)-(long)(p)),105,0,0,-1,-1,-1,1,"Nb_ADC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Nb_TDC)-(long)(p)),105,0,0,-1,-1,-1,1,"Nb_TDC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Nb_Scaler)-(long)(p)),105,0,0,-1,-1,-1,1,"Nb_Scaler=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Nb_TimeStamp)-(long)(p)),105,0,0,-1,-1,-1,1,"Nb_TimeStamp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Scaler32bit)-(long)(p)),105,0,0,-1,-1,-1,1,"Scaler32bit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EventFlags)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SCNLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"EventFlags=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Nb_Channels)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SCNLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,1,"Nb_Channels=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MapCrates)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SCNLN_maplEintcOmaplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,std::map<int,int> >"),-1,1,"MapCrates=",0,"[ procID -> { VMEGeo, idMod}] ");
   G__memvar_setup((void*)((long)(&p->Maptemp)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SCNLN_TMap),-1,-1,1,"Maptemp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ModType)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__G__SCNLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,1,"ModType=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMWParameter */
static void G__setup_memvarTMWParameter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TMWParameter));
   { TMWParameter *p; p=(TMWParameter*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->x_factor)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"x_factor[13]=",0,"MWPC calibration        */");
   G__memvar_setup((void*)((long)(&p->x_offset)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"x_offset[13]=",0,"mm                        */");
   G__memvar_setup((void*)((long)(&p->y_factor)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"y_factor[13]=",0,"*/");
   G__memvar_setup((void*)((long)(&p->y_offset)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"y_offset[13]=",0,"mm                        */");
   G__memvar_setup((void*)((long)(&p->gain_tdc)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"gain_tdc[5][13]=",0,"14.09.05 CN+AM  TDC calibration ns/ch */");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TTPCParameter */
static void G__setup_memvarTTPCParameter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TTPCParameter));
   { TTPCParameter *p; p=(TTPCParameter*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->x_factor)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"x_factor[7][2]=",0,"[mm/ch]                  */");
   G__memvar_setup((void*)((long)(&p->x_offset)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"x_offset[7][2]=",0,"*/");
   G__memvar_setup((void*)((long)(&p->y_factor)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"y_factor[7][4]=",0,"[mm/ch]                  */");
   G__memvar_setup((void*)((long)(&p->y_offset)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"y_offset[7][4]=",0,"*/");
   G__memvar_setup((void*)((long)(&p->tdc1_factor)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tdc1_factor[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tdc2_factor)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tdc2_factor[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMUSICParameter */
static void G__setup_memvarTMUSICParameter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TMUSICParameter));
   { TMUSICParameter *p; p=(TMUSICParameter*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->e1_off)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"e1_off[8]=",0,"ADC offsets              */");
   G__memvar_setup((void*)((long)(&p->e1_gain)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"e1_gain[8]=",0,"ADC gains                */");
   G__memvar_setup((void*)((long)(&p->e2_off)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"e2_off[8]=",0,"ADC offsets              */");
   G__memvar_setup((void*)((long)(&p->e2_gain)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"e2_gain[8]=",0,"ADC gains                */");
   G__memvar_setup((void*)((long)(&p->e3_off)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"e3_off[4]=",0,"ADC offsets              */");
   G__memvar_setup((void*)((long)(&p->e3_gain)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"e3_gain[4]=",0,"ADC gains                */");
   G__memvar_setup((void*)((long)(&p->b_selfcorr1)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"b_selfcorr1=",0,"1 => Music1 x correction */");
   G__memvar_setup((void*)((long)(&p->pos_a1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pos_a1[7]=",0,"pos. corr. de(i) ->  (1) */");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSCIParameter */
static void G__setup_memvarTSCIParameter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCIParameter));
   { TSCIParameter *p; p=(TSCIParameter*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->le_a)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"le_a[2][12]=",0,"dE-left   shift,gain     */");
   G__memvar_setup((void*)((long)(&p->re_a)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"re_a[2][12]=",0,"dE-right  shift,gain     */");
   G__memvar_setup((void*)((long)(&p->le_veto_a)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"le_veto_a[2][3]=",0,"veto dE-left  shift,gain */");
   G__memvar_setup((void*)((long)(&p->re_veto_a)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"re_veto_a[2][3]=",0,"veto dE-right shift,gain */");
   G__memvar_setup((void*)((long)(&p->tac_factor)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tac_factor[12]=",0,"TAC factor               */");
   G__memvar_setup((void*)((long)(&p->tac_off)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tac_off[12]=",0,"TAC offset               */");
   G__memvar_setup((void*)((long)(&p->x_a)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"x_a[7][12]=",0,"pos. corr. de(i) ->  (1) */");
   G__memvar_setup((void*)((long)(&p->y5_a)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"y5_a[7]=",0,"pos. corr. de(i) ->  (1) */");
   G__memvar_setup((void*)((long)(&p->tof_bll2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tof_bll2=",0,"[ps/channel]             */");
   G__memvar_setup((void*)((long)(&p->tof_brr2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tof_brr2=",0,"[ps/channel]             */");
   G__memvar_setup((void*)((long)(&p->tof_a2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tof_a2=",0,"shift [channels]         */");
   G__memvar_setup((void*)((long)(&p->tof_bll3)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tof_bll3=",0,"[ps/channel]             */");
   G__memvar_setup((void*)((long)(&p->tof_brr3)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tof_brr3=",0,"[ps/channel]             */");
   G__memvar_setup((void*)((long)(&p->tof_a3)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tof_a3=",0,"shift [channels]         */");
   G__memvar_setup((void*)((long)(&p->tof_bll4)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tof_bll4=",0,"[ps/channel]             */");
   G__memvar_setup((void*)((long)(&p->tof_brr4)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tof_brr4=",0,"[ps/channel]             */");
   G__memvar_setup((void*)((long)(&p->tof_a4)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tof_a4=",0,"shift [channels]         */");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TIDParameter */
static void G__setup_memvarTIDParameter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TIDParameter));
   { TIDParameter *p; p=(TIDParameter*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->x2_select)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"x2_select=",0,"1=> x2 position from MWs */");
   G__memvar_setup((void*)((long)(&p->x4_select)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"x4_select=",0,"1=> x4 pos.from MWs      */");
   G__memvar_setup((void*)((long)(&p->x8_select)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"x8_select=",0,"1=> x8 pos.from MWs      */");
   G__memvar_setup((void*)((long)(&p->id_tofoff2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"id_tofoff2=",0,"Tof offset S2-S4 [ps]    */");
   G__memvar_setup((void*)((long)(&p->id_tofoff3)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"id_tofoff3=",0,"Tof offset S2-S4 [ps]    */ //2nd tof from S2 - S4");
   G__memvar_setup((void*)((long)(&p->id_tofoff4)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"id_tofoff4=",0,"Tof offset S2-S8 [ps]    */");
   G__memvar_setup((void*)((long)(&p->id_path2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"id_path2=",0,"Flight path/c S2-S4 [ps] */");
   G__memvar_setup((void*)((long)(&p->id_path3)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"id_path3=",0,"Flight path/c S2-S4 [ps] */ //2nd tof from S2 - S4");
   G__memvar_setup((void*)((long)(&p->id_path4)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"id_path4=",0,"Flight path/c S2-S8 [ps] */");
   G__memvar_setup((void*)((long)(&p->id_tofcorr2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"id_tofcorr2=",0,"Tof correction for x4    */");
   G__memvar_setup((void*)((long)(&p->id_tofcorr3)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"id_tofcorr3=",0,"Tof correction for x4    */ //2nd tof from S2 - S4");
   G__memvar_setup((void*)((long)(&p->id_tofcorr4)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"id_tofcorr4=",0,"Tof correction for x8    */");
   G__memvar_setup((void*)((long)(&p->vel_a)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"vel_a[4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vel_a2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"vel_a2[4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vel_a3)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"vel_a3[4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zgate_low)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"zgate_low=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zgate_high)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"zgate_high=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ID_Z_AoverQ_num)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ID_Z_AoverQ_num[5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ID_Z_AoverQ)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ID_Z_AoverQ[5][5][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ID_x2AoverQ_num)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ID_x2AoverQ_num[6]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ID_x2AoverQ)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ID_x2AoverQ[6][5][2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSIParameter */
static void G__setup_memvarTSIParameter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TSIParameter));
   { TSIParameter *p; p=(TSIParameter*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->si_factor1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"si_factor1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->si_factor2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"si_factor2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->si_factor3)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"si_factor3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->si_factor4)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"si_factor4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->si_factor5)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"si_factor5=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->si_offset1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"si_offset1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->si_offset2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"si_offset2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->si_offset3)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"si_offset3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->si_offset4)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"si_offset4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->si_offset5)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"si_offset5=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dssd_offset)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dssd_offset[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dssd_factor)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dssd_factor[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TMRTOFMSParameter */
static void G__setup_memvarTMRTOFMSParameter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TMRTOFMSParameter));
   { TMRTOFMSParameter *p; p=(TMRTOFMSParameter*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->MRTOFMS_a)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"MRTOFMS_a=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MRTOFMS_b)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"MRTOFMS_b=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MRTOFMS_t0)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"MRTOFMS_t0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MRTOFMS_TXRS)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"MRTOFMS_TXRS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSCNUnpackEvent */
static void G__setup_memvarTSCNUnpackEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent));
   { TSCNUnpackEvent *p; p=(TSCNUnpackEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fiCrate1)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fiCrate1[36]=",0,"This two are for the QDC's ");
   G__memvar_setup((void*)((long)(&p->fiCrate2)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fiCrate2[36]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fiCrate3)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fiCrate3[36]=",0,"For TDC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSCNUnpackProc */
static void G__setup_memvarTSCNUnpackProc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc));
   { TSCNUnpackProc *p; p=(TSCNUnpackProc*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->FATgate1_low)-(long)(p)),100,0,0,-1,-1,-1,1,"FATgate1_low=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FATgate1_high)-(long)(p)),100,0,0,-1,-1,-1,1,"FATgate1_high=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FATgate2_low)-(long)(p)),100,0,0,-1,-1,-1,1,"FATgate2_low=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FATgate2_high)-(long)(p)),100,0,0,-1,-1,-1,1,"FATgate2_high=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hsci_tofll2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hsci_tofll3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hsci_tof2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hsci_tofrr2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hsci_tofrr3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hsci_tof3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hID_x2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hID_y2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hID_a2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hID_b2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hID_x4=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hID_y4=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hID_a4=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hID_b4=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hbeta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hbeta3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hgamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hAoQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hAoQ_corr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hz2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hz3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"htimestamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hts=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"hts2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"FAT_Esum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH2),-1,-1,2,"FAT_gg=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"FAT_TDCdtsum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"FAT_QDCdtsum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"FAT_TDCdtsum_ref_gated=",0,"gates are hard coded");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"FAT_QDCdtsum_ref_gated=",0,"for now...");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"FAT_hits=",0,"number of hits per detector id");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"FAT_hits_QDC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"FAT_hits_TDC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH2),-1,-1,2,"FAT_QDC_TDC_hitmap=",0,"hits of qdc and tdc in same event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH2),-1,-1,2,"FAT_correlations=",0,"det-det coincidence map");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"FAT_E=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"FAT_Eraw=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__SCNLN_TH2),-1,-1,2,"FAT_E_ratio=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__SCNLN_TH2),-1,-1,2,"FAT_gg_ref=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"FAT_TDCdt_ref=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"FAT_QDCdt_ref=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__SCNLN_TH2),-1,-1,2,"FAT_TDC_QDC_dt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"FAT_TDCdt_ref_gated=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__SCNLN_TH2),-1,-1,2,"FAT_E_TDCdt_ref_gated=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"WR_HIST=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"WR_HIST2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"C_t=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"tamex_Mult_lead=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"tamex_Mult_trail=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"mat=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"all=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"all2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"WR_F=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"Coarse=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"DIFF_ARR=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"tamex_Mult_Ch_lead=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"tamex_Mult_Ch_trail=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"FAT_TDC_Diff=",0,"****NEWLY ADDED****");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__SCNLN_TH2),-1,-1,2,"tamex_mult_mat_lead=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__SCNLN_TH2),-1,-1,2,"tamex_mult_mat_trail=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"Trail_LEAD=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,4,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"LEAD_LEAD=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"GAL_Pileup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"GAL_Hit_Pat=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"GAL_Chan_Time_Diff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,2,"GAL_Chan_E[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH2),-1,-1,2,"GAL_Chan_E_Mat=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH2),-1,-1,2,"GAL_Time_Diff_vs_Energy[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,-1,-1,4,"FATIMA_reference_det=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,-1,-1,4,"FAT_MAX_DET=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"FAT_REF_DET=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"E_gate1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"E_gate2=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"ffill=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fshift=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"White_Rabbbit_old=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"PrcID_Array[10][5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"Used_Systems[10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"SKIP_EVT_BUILDING=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"vals[100000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"val_it=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__SCNLN_string),-1,-1,4,"input_data_path=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__SCNLN_string),-1,-1,4,"input_data_path_old=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"cals_done=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"WR_used=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"FAT_make_raw_histograms=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"FAT_gain_match_used=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"FAT_gain_match_done=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"file_pwd=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"file_end=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__SCNLN_string),-1,-1,4,"gain_match_filename=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__SCNLN_Detector_System),-1,-1,4,"Detector_Systems=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__G__SCNLN_Data_Stream),-1,-1,4,"data_stream=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_White_Rabbit),-1,-1,4,"WR=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_Raw_Event),-1,-1,4,"RAW=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"amount_interest=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,-1,-1,4,"length_interest=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,2,0,-1,-1,-1,4,"interest_array=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fatima_E_save[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"am_FATIMA_hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"num_full_FAT_evts=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"am_GALILEO_hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"count=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"called[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"iterator=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"WR_tmp[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSCNCalEvent */
static void G__setup_memvarTSCNCalEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent));
   { TSCNCalEvent *p; p=(TSCNCalEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->frDataC1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"frDataC1[36]=",0,"For QDC 1");
   G__memvar_setup((void*)((long)(&p->frDataC2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"frDataC2[36]=",0,"For QDC 2");
   G__memvar_setup((void*)((long)(&p->frDataC3)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"frDataC3[36]=",0,"For TDC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSCNAnlEvent */
static void G__setup_memvarTSCNAnlEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent));
   { TSCNAnlEvent *p; p=(TSCNAnlEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Data1)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Data1[36]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Data2)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Data2[36]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Data3)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Data3[36]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSCNAnalysis */
static void G__setup_memvarTSCNAnalysis(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis));
   { TSCNAnalysis *p; p=(TSCNAnalysis*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TGo4MbsEvent),-1,-1,4,"fMbsEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent),-1,-1,4,"fRawEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent),-1,-1,4,"fCalEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent),-1,-1,4,"fAnlEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter),-1,-1,4,"fPar=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLastEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSCNAnlProc */
static void G__setup_memvarTSCNAnlProc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc));
   { TSCNAnlProc *p; p=(TSCNAnlProc*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fTimeDiff)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,1,"fTimeDiff=",0,"/ Time difference Histogram from TDC channels");
   G__memvar_setup((void*)((long)(&p->fGatedHist)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,1,"fGatedHist=",0,"/ Time difference Histogram from TDC channels");
   G__memvar_setup((void*)((long)(&p->fconHis1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TGo4WinCond),-1,-1,1,"fconHis1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fWinCon1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TGo4WinCond),-1,-1,1,"fWinCon1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->XAnodes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,1,"XAnodes=",0,"! Charge for the x anodes");
   G__memvar_setup((void*)((long)(&p->YAnodes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,1,"YAnodes=",0,"! Charge for the y andes");
   G__memvar_setup((void*)((long)(&p->fParam1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter),-1,-1,1,"fParam1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->QSpectrum)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TGo4Picture),-1,-1,1,"QSpectrum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCoincQ1A1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH2),-1,-1,1,"fCoincQ1A1=",0,"Coincidences with germaniun ");
   G__memvar_setup((void*)((long)(&p->fCoincQ1T1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH2),-1,-1,1,"fCoincQ1T1=",0,"Coincidences with germaniun ");
   G__memvar_setup((void*)((long)(&p->MatrixCond)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH2),-1,-1,1,"MatrixCond=",0,"!Position matrix + conditions ");
   G__memvar_setup((void*)((long)(&p->MatrixCluster)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH2),-1,-1,1,"MatrixCluster=",0,"!Position matrix + conditions ");
   G__memvar_setup((void*)((long)(&p->Refx)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1D),-1,-1,1,"Refx=",0,"Reference histogram for X anodes");
   G__memvar_setup((void*)((long)(&p->Refy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1D),-1,-1,1,"Refy=",0,"Reference histogram for Y anodes");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSCNCalProc */
static void G__setup_memvarTSCNCalProc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc));
   { TSCNCalProc *p; p=(TSCNCalProc*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fQDC1Ch)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,1,"fQDC1Ch[36]=",0,"The calibrated histograms");
   G__memvar_setup((void*)((long)(&p->Sum)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TH1),-1,-1,1,"Sum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fParam1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter),-1,-1,1,"fParam1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->picPMT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TGo4Picture),-1,-1,1,"picPMT=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__SCNLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__SCN() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTSCNParameter(void) {
   /* TSCNParameter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter));
   G__memfunc_setup("TSCNParameter",1241,G__G__SCN_534_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter), -1, 0, 1, 1, 1, 0, "C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedestal",1118,G__G__SCN_534_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - chan i - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFactor",907,G__G__SCN_534_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - chan d - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__SCN_534_0_4, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSCNParameter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_534_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNParameter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_534_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSCNParameter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_534_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSCNParameter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_534_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_534_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNParameter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_534_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNParameter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_534_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNParameter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_534_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNParameter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSCNParameter", 1241, G__G__SCN_534_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter), -1, 0, 1, 1, 1, 0, "u 'TSCNParameter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSCNParameter", 1367, G__G__SCN_534_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SCN_534_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__SCNLN_TSCNParameter), -1, 1, 1, 1, 1, 0, "u 'TSCNParameter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTXRSParameter(void) {
   /* TXRSParameter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TXRSParameter));
   G__memfunc_setup("TXRSParameter",1266,G__G__SCN_643_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TXRSParameter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TXRSParameter",1266,G__G__SCN_643_0_2, 105, G__get_linked_tagnum(&G__G__SCNLN_TXRSParameter), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateFrom",1015,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TGo4Parameter' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SCN_643_0_5, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TXRSParameter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_643_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXRSParameter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_643_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TXRSParameter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_643_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TXRSParameter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_643_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_643_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXRSParameter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_643_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TXRSParameter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_643_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TXRSParameter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_643_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TXRSParameter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TXRSParameter", 1266, G__G__SCN_643_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_TXRSParameter), -1, 0, 1, 1, 1, 0, "u 'TXRSParameter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TXRSParameter", 1392, G__G__SCN_643_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SCN_643_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__SCNLN_TXRSParameter), -1, 1, 1, 1, 1, 0, "u 'TXRSParameter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMap1(void) {
   /* Map1 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_Map1));
   G__memfunc_setup("Map1",335,G__G__SCN_644_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_Map1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Map1",335,G__G__SCN_644_0_2, 105, G__get_linked_tagnum(&G__G__SCNLN_Map1), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__SCN_644_0_3, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Map1::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_644_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Map1::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_644_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Map1::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_644_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Map1::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_644_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_644_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Map1::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_644_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Map1::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_644_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Map1::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_644_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Map1::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Map1", 335, G__G__SCN_644_0_15, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_Map1), -1, 0, 1, 1, 1, 0, "u 'Map1' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Map1", 461, G__G__SCN_644_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SCN_644_0_17, (int) ('u'), G__get_linked_tagnum(&G__G__SCNLN_Map1), -1, 1, 1, 1, 1, 0, "u 'Map1' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTModParameter(void) {
   /* TModParameter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TModParameter));
   G__memfunc_setup("TModParameter",1301,G__G__SCN_645_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TModParameter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TModParameter",1301,G__G__SCN_645_0_2, 105, G__get_linked_tagnum(&G__G__SCNLN_TModParameter), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateFrom",1015,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TGo4Parameter' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setMap",618,G__G__SCN_645_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__SCN_645_0_6, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TModParameter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_645_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TModParameter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_645_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TModParameter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_645_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TModParameter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_645_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_645_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TModParameter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_645_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TModParameter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_645_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TModParameter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_645_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TModParameter::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TModParameter", 1427, G__G__SCN_645_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMWParameter(void) {
   /* TMWParameter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TMWParameter));
   G__memfunc_setup("TMWParameter",1177,G__G__SCN_661_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TMWParameter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMWParameter",1177,G__G__SCN_661_0_2, 105, G__get_linked_tagnum(&G__G__SCNLN_TMWParameter), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateFrom",1015,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TGo4Parameter' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SCN_661_0_5, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMWParameter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_661_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMWParameter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_661_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMWParameter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_661_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMWParameter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_661_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_661_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMWParameter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_661_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMWParameter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_661_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMWParameter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_661_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMWParameter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TMWParameter", 1177, G__G__SCN_661_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_TMWParameter), -1, 0, 1, 1, 1, 0, "u 'TMWParameter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMWParameter", 1303, G__G__SCN_661_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SCN_661_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__SCNLN_TMWParameter), -1, 1, 1, 1, 1, 0, "u 'TMWParameter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTTPCParameter(void) {
   /* TTPCParameter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TTPCParameter));
   G__memfunc_setup("TTPCParameter",1244,G__G__SCN_662_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TTPCParameter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTPCParameter",1244,G__G__SCN_662_0_2, 105, G__get_linked_tagnum(&G__G__SCNLN_TTPCParameter), -1, 0, 1, 1, 1, 0, "C - 'Text_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateFrom",1015,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TGo4Parameter' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SCN_662_0_5, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TTPCParameter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_662_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTPCParameter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_662_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TTPCParameter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_662_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TTPCParameter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_662_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_662_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTPCParameter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_662_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTPCParameter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_662_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTPCParameter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_662_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTPCParameter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TTPCParameter", 1244, G__G__SCN_662_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_TTPCParameter), -1, 0, 1, 1, 1, 0, "u 'TTPCParameter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TTPCParameter", 1370, G__G__SCN_662_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SCN_662_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__SCNLN_TTPCParameter), -1, 1, 1, 1, 1, 0, "u 'TTPCParameter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMUSICParameter(void) {
   /* TMUSICParameter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TMUSICParameter));
   G__memfunc_setup("TMUSICParameter",1398,G__G__SCN_663_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TMUSICParameter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMUSICParameter",1398,G__G__SCN_663_0_2, 105, G__get_linked_tagnum(&G__G__SCNLN_TMUSICParameter), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateFrom",1015,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TGo4Parameter' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SCN_663_0_5, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMUSICParameter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_663_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMUSICParameter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_663_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMUSICParameter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_663_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMUSICParameter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_663_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_663_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMUSICParameter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_663_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMUSICParameter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_663_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMUSICParameter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_663_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMUSICParameter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TMUSICParameter", 1398, G__G__SCN_663_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_TMUSICParameter), -1, 0, 1, 1, 1, 0, "u 'TMUSICParameter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMUSICParameter", 1524, G__G__SCN_663_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SCN_663_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__SCNLN_TMUSICParameter), -1, 1, 1, 1, 1, 0, "u 'TMUSICParameter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSCIParameter(void) {
   /* TSCIParameter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCIParameter));
   G__memfunc_setup("TSCIParameter",1236,G__G__SCN_664_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCIParameter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSCIParameter",1236,G__G__SCN_664_0_2, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCIParameter), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateFrom",1015,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TGo4Parameter' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SCN_664_0_5, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSCIParameter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_664_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCIParameter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_664_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSCIParameter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_664_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSCIParameter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_664_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_664_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCIParameter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_664_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCIParameter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_664_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCIParameter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_664_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCIParameter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSCIParameter", 1236, G__G__SCN_664_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_TSCIParameter), -1, 0, 1, 1, 1, 0, "u 'TSCIParameter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSCIParameter", 1362, G__G__SCN_664_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SCN_664_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__SCNLN_TSCIParameter), -1, 1, 1, 1, 1, 0, "u 'TSCIParameter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTIDParameter(void) {
   /* TIDParameter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TIDParameter));
   G__memfunc_setup("TIDParameter",1154,G__G__SCN_665_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TIDParameter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TIDParameter",1154,G__G__SCN_665_0_2, 105, G__get_linked_tagnum(&G__G__SCNLN_TIDParameter), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateFrom",1015,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TGo4Parameter' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SCN_665_0_5, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TIDParameter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_665_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TIDParameter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_665_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TIDParameter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_665_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TIDParameter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_665_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_665_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TIDParameter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_665_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TIDParameter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_665_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TIDParameter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_665_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TIDParameter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TIDParameter", 1154, G__G__SCN_665_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_TIDParameter), -1, 0, 1, 1, 1, 0, "u 'TIDParameter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TIDParameter", 1280, G__G__SCN_665_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SCN_665_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__SCNLN_TIDParameter), -1, 1, 1, 1, 1, 0, "u 'TIDParameter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSIParameter(void) {
   /* TSIParameter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TSIParameter));
   G__memfunc_setup("TSIParameter",1169,G__G__SCN_666_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TSIParameter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSIParameter",1169,G__G__SCN_666_0_2, 105, G__get_linked_tagnum(&G__G__SCNLN_TSIParameter), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateFrom",1015,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TGo4Parameter' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SCN_666_0_5, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSIParameter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_666_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSIParameter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_666_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSIParameter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_666_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSIParameter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_666_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_666_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSIParameter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_666_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSIParameter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_666_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSIParameter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_666_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSIParameter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSIParameter", 1169, G__G__SCN_666_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_TSIParameter), -1, 0, 1, 1, 1, 0, "u 'TSIParameter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSIParameter", 1295, G__G__SCN_666_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SCN_666_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__SCNLN_TSIParameter), -1, 1, 1, 1, 1, 0, "u 'TSIParameter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTMRTOFMSParameter(void) {
   /* TMRTOFMSParameter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TMRTOFMSParameter));
   G__memfunc_setup("TMRTOFMSParameter",1565,G__G__SCN_667_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TMRTOFMSParameter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TMRTOFMSParameter",1565,G__G__SCN_667_0_2, 105, G__get_linked_tagnum(&G__G__SCNLN_TMRTOFMSParameter), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UpdateFrom",1015,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TGo4Parameter' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SCN_667_0_5, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TMRTOFMSParameter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_667_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMRTOFMSParameter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_667_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TMRTOFMSParameter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_667_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TMRTOFMSParameter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_667_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_667_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMRTOFMSParameter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_667_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMRTOFMSParameter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_667_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TMRTOFMSParameter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_667_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TMRTOFMSParameter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TMRTOFMSParameter", 1565, G__G__SCN_667_0_17, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_TMRTOFMSParameter), -1, 0, 1, 1, 1, 0, "u 'TMRTOFMSParameter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TMRTOFMSParameter", 1691, G__G__SCN_667_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SCN_667_0_19, (int) ('u'), G__get_linked_tagnum(&G__G__SCNLN_TMRTOFMSParameter), -1, 1, 1, 1, 1, 0, "u 'TMRTOFMSParameter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSCNUnpackEvent(void) {
   /* TSCNUnpackEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent));
   G__memfunc_setup("TSCNUnpackEvent",1436,G__G__SCN_788_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSCNUnpackEvent",1436,G__G__SCN_788_0_2, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SCN_788_0_4, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSCNUnpackEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_788_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNUnpackEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_788_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSCNUnpackEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_788_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSCNUnpackEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_788_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_788_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNUnpackEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_788_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNUnpackEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_788_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNUnpackEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_788_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNUnpackEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSCNUnpackEvent", 1436, G__G__SCN_788_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent), -1, 0, 1, 1, 1, 0, "u 'TSCNUnpackEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSCNUnpackEvent", 1562, G__G__SCN_788_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SCN_788_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackEvent), -1, 1, 1, 1, 1, 0, "u 'TSCNUnpackEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSCNUnpackProc(void) {
   /* TSCNUnpackProc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc));
   G__memfunc_setup("TSCNUnpackProc",1326,G__G__SCN_816_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSCNUnpackProc",1326,G__G__SCN_816_0_2, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildEvent",1010,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TGo4EventElement' - 0 - dest", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("get_Conversion",1477,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_used_Systems",1703,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_WR_Config",1277,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("load_PrcID_File",1424,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_interest_arrays",2046,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__G__SCN_816_0_9, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSCNUnpackProc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_816_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNUnpackProc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_816_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSCNUnpackProc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_816_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSCNUnpackProc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_816_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_816_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNUnpackProc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_816_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNUnpackProc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_816_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNUnpackProc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_816_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNUnpackProc::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSCNUnpackProc", 1326, G__G__SCN_816_0_21, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_TSCNUnpackProc), -1, 0, 1, 1, 1, 0, "u 'TSCNUnpackProc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSCNUnpackProc", 1452, G__G__SCN_816_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSCNCalEvent(void) {
   /* TSCNCalEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent));
   G__memfunc_setup("TSCNCalEvent",1098,G__G__SCN_818_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSCNCalEvent",1098,G__G__SCN_818_0_2, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SCN_818_0_4, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSCNCalEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_818_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNCalEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_818_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSCNCalEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_818_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSCNCalEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_818_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_818_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNCalEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_818_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNCalEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_818_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNCalEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_818_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNCalEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSCNCalEvent", 1098, G__G__SCN_818_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent), -1, 0, 1, 1, 1, 0, "u 'TSCNCalEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSCNCalEvent", 1224, G__G__SCN_818_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SCN_818_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__SCNLN_TSCNCalEvent), -1, 1, 1, 1, 1, 0, "u 'TSCNCalEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSCNAnlEvent(void) {
   /* TSCNAnlEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent));
   G__memfunc_setup("TSCNAnlEvent",1109,G__G__SCN_819_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSCNAnlEvent",1109,G__G__SCN_819_0_2, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SCN_819_0_4, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSCNAnlEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_819_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNAnlEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_819_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSCNAnlEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_819_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSCNAnlEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_819_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_819_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNAnlEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_819_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNAnlEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_819_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNAnlEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_819_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNAnlEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSCNAnlEvent", 1109, G__G__SCN_819_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent), -1, 0, 1, 1, 1, 0, "u 'TSCNAnlEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSCNAnlEvent", 1235, G__G__SCN_819_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SCN_819_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlEvent), -1, 1, 1, 1, 1, 0, "u 'TSCNAnlEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSCNAnalysis(void) {
   /* TSCNAnalysis */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis));
   G__memfunc_setup("TSCNAnalysis",1148,G__G__SCN_820_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSCNAnalysis",1148,G__G__SCN_820_0_2, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis), -1, 0, 2, 1, 1, 0, 
"i - - 0 - argc C - - 2 - argv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UserPreLoop",1120,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UserEventFunc",1325,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UserPostLoop",1247,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SCN_820_0_6, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSCNAnalysis::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_820_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNAnalysis::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_820_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSCNAnalysis::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_820_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSCNAnalysis::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_820_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_820_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNAnalysis::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_820_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNAnalysis::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_820_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNAnalysis::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_820_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNAnalysis::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSCNAnalysis", 1148, G__G__SCN_820_0_18, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis), -1, 0, 1, 1, 1, 0, "u 'TSCNAnalysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSCNAnalysis", 1274, G__G__SCN_820_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SCN_820_0_20, (int) ('u'), G__get_linked_tagnum(&G__G__SCNLN_TSCNAnalysis), -1, 1, 1, 1, 1, 0, "u 'TSCNAnalysis' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSCNAnlProc(void) {
   /* TSCNAnlProc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc));
   G__memfunc_setup("TSCNAnlProc",999,G__G__SCN_821_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSCNAnlProc",999,G__G__SCN_821_0_2, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildEvent",1010,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TGo4EventElement' - 0 - dest", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SCN_821_0_4, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSCNAnlProc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_821_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNAnlProc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_821_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSCNAnlProc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_821_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSCNAnlProc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_821_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_821_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNAnlProc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_821_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNAnlProc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_821_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNAnlProc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_821_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNAnlProc::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSCNAnlProc", 999, G__G__SCN_821_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc), -1, 0, 1, 1, 1, 0, "u 'TSCNAnlProc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSCNAnlProc", 1125, G__G__SCN_821_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SCN_821_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__SCNLN_TSCNAnlProc), -1, 1, 1, 1, 1, 0, "u 'TSCNAnlProc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSCNCalProc(void) {
   /* TSCNCalProc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc));
   G__memfunc_setup("TSCNCalProc",988,G__G__SCN_822_0_1, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSCNCalProc",988,G__G__SCN_822_0_2, 105, G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildEvent",1010,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TGo4EventElement' - 0 - dest", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__SCN_822_0_4, 85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSCNCalProc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__SCN_822_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNCalProc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__SCN_822_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSCNCalProc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__SCN_822_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSCNCalProc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__SCNLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__SCN_822_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__SCN_822_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNCalProc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__SCN_822_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNCalProc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__SCN_822_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSCNCalProc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__SCN_822_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSCNCalProc::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSCNCalProc", 988, G__G__SCN_822_0_16, (int) ('i'), G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc), -1, 0, 1, 1, 1, 0, "u 'TSCNCalProc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSCNCalProc", 1114, G__G__SCN_822_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__G__SCN_822_0_18, (int) ('u'), G__get_linked_tagnum(&G__G__SCNLN_TSCNCalProc), -1, 1, 1, 1, 1, 0, "u 'TSCNCalProc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__SCN() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__SCN() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__SCN() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__SCNLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__SCNLN_TMap = { "TMap" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_Raw_Event = { "Raw_Event" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_Data_Stream = { "Data_Stream" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TGo4Picture = { "TGo4Picture" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TGo4EventSource = { "TGo4EventSource" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TGo4EventElement = { "TGo4EventElement" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TGo4MbsEvent = { "TGo4MbsEvent" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TGo4Parameter = { "TGo4Parameter" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR = { "map<int,int,less<int>,allocator<pair<const int,int> > >" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TSCNParameter = { "TSCNParameter" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_Detector_System = { "Detector_System" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TGo4EventProcessor = { "TGo4EventProcessor" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TGo4CommandReceiver = { "TGo4CommandReceiver" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TGo4WinCond = { "TGo4WinCond" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TGo4Analysis = { "TGo4Analysis" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TXRSParameter = { "TXRSParameter" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_Map1 = { "Map1" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TModParameter = { "TModParameter" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_maplEintcOmaplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgRsPgRsPgRsPgR = { "map<int,map<int,int,less<int>,allocator<pair<const int,int> > >,less<int>,allocator<pair<const int,map<int,int,less<int>,allocator<pair<const int,int> > > > > >" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TMWParameter = { "TMWParameter" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TTPCParameter = { "TTPCParameter" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TMUSICParameter = { "TMUSICParameter" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TSCIParameter = { "TSCIParameter" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TIDParameter = { "TIDParameter" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TSIParameter = { "TSIParameter" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TMRTOFMSParameter = { "TMRTOFMSParameter" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TSCNUnpackEvent = { "TSCNUnpackEvent" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_maplEpairlEintcOintgRcOintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOintgRsPgRsPgR = { "map<pair<int,int>,int,less<pair<int,int> >,allocator<pair<const pair<int,int>,int> > >" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_White_Rabbit = { "White_Rabbit" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TSCNUnpackProc = { "TSCNUnpackProc" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TSCNCalEvent = { "TSCNCalEvent" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TSCNAnlEvent = { "TSCNAnlEvent" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TSCNAnalysis = { "TSCNAnalysis" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TSCNAnlProc = { "TSCNAnlProc" , 99 , -1 };
G__linked_taginfo G__G__SCNLN_TSCNCalProc = { "TSCNCalProc" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__SCN() {
  G__G__SCNLN_TClass.tagnum = -1 ;
  G__G__SCNLN_TBuffer.tagnum = -1 ;
  G__G__SCNLN_TMemberInspector.tagnum = -1 ;
  G__G__SCNLN_TObject.tagnum = -1 ;
  G__G__SCNLN_TNamed.tagnum = -1 ;
  G__G__SCNLN_string.tagnum = -1 ;
  G__G__SCNLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__SCNLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__SCNLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__SCNLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__SCNLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__SCNLN_TMap.tagnum = -1 ;
  G__G__SCNLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__G__SCNLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__G__SCNLN_TH1D.tagnum = -1 ;
  G__G__SCNLN_TH1.tagnum = -1 ;
  G__G__SCNLN_Raw_Event.tagnum = -1 ;
  G__G__SCNLN_Data_Stream.tagnum = -1 ;
  G__G__SCNLN_TGo4Picture.tagnum = -1 ;
  G__G__SCNLN_TGo4EventSource.tagnum = -1 ;
  G__G__SCNLN_TGo4EventElement.tagnum = -1 ;
  G__G__SCNLN_TGo4MbsEvent.tagnum = -1 ;
  G__G__SCNLN_TGo4Parameter.tagnum = -1 ;
  G__G__SCNLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__SCNLN_TSCNParameter.tagnum = -1 ;
  G__G__SCNLN_Detector_System.tagnum = -1 ;
  G__G__SCNLN_TGo4EventProcessor.tagnum = -1 ;
  G__G__SCNLN_TGo4CommandReceiver.tagnum = -1 ;
  G__G__SCNLN_TH2.tagnum = -1 ;
  G__G__SCNLN_TGo4WinCond.tagnum = -1 ;
  G__G__SCNLN_TGo4Analysis.tagnum = -1 ;
  G__G__SCNLN_TXRSParameter.tagnum = -1 ;
  G__G__SCNLN_Map1.tagnum = -1 ;
  G__G__SCNLN_TModParameter.tagnum = -1 ;
  G__G__SCNLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__G__SCNLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__SCNLN_maplEintcOmaplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__G__SCNLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__G__SCNLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__SCNLN_TMWParameter.tagnum = -1 ;
  G__G__SCNLN_TTPCParameter.tagnum = -1 ;
  G__G__SCNLN_TMUSICParameter.tagnum = -1 ;
  G__G__SCNLN_TSCIParameter.tagnum = -1 ;
  G__G__SCNLN_TIDParameter.tagnum = -1 ;
  G__G__SCNLN_TSIParameter.tagnum = -1 ;
  G__G__SCNLN_TMRTOFMSParameter.tagnum = -1 ;
  G__G__SCNLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__G__SCNLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__G__SCNLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__G__SCNLN_TSCNUnpackEvent.tagnum = -1 ;
  G__G__SCNLN_maplEpairlEintcOintgRcOintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOintgRsPgRsPgR.tagnum = -1 ;
  G__G__SCNLN_White_Rabbit.tagnum = -1 ;
  G__G__SCNLN_TSCNUnpackProc.tagnum = -1 ;
  G__G__SCNLN_TSCNCalEvent.tagnum = -1 ;
  G__G__SCNLN_TSCNAnlEvent.tagnum = -1 ;
  G__G__SCNLN_TSCNAnalysis.tagnum = -1 ;
  G__G__SCNLN_TSCNAnlProc.tagnum = -1 ;
  G__G__SCNLN_TSCNCalProc.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__SCN() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_string);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TMap);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TH1D);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TH1);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_Raw_Event);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_Data_Stream);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TGo4Picture);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TGo4EventSource);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TGo4EventElement);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TGo4MbsEvent);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TGo4Parameter);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TSCNParameter),sizeof(TSCNParameter),-1,324864,(char*)NULL,G__setup_memvarTSCNParameter,G__setup_memfuncTSCNParameter);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_Detector_System);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TGo4EventProcessor);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TGo4CommandReceiver);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TH2);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TGo4WinCond);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TGo4Analysis);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TXRSParameter),sizeof(TXRSParameter),-1,324864,(char*)NULL,G__setup_memvarTXRSParameter,G__setup_memfuncTXRSParameter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_Map1),sizeof(Map1),-1,323840,(char*)NULL,G__setup_memvarMap1,G__setup_memfuncMap1);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TModParameter),sizeof(TModParameter),-1,324864,(char*)NULL,G__setup_memvarTModParameter,G__setup_memfuncTModParameter);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_maplEintcOmaplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TMWParameter),sizeof(TMWParameter),-1,324864,(char*)NULL,G__setup_memvarTMWParameter,G__setup_memfuncTMWParameter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TTPCParameter),sizeof(TTPCParameter),-1,324864,(char*)NULL,G__setup_memvarTTPCParameter,G__setup_memfuncTTPCParameter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TMUSICParameter),sizeof(TMUSICParameter),-1,324864,(char*)NULL,G__setup_memvarTMUSICParameter,G__setup_memfuncTMUSICParameter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TSCIParameter),sizeof(TSCIParameter),-1,324864,(char*)NULL,G__setup_memvarTSCIParameter,G__setup_memfuncTSCIParameter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TIDParameter),sizeof(TIDParameter),-1,324864,(char*)NULL,G__setup_memvarTIDParameter,G__setup_memfuncTIDParameter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TSIParameter),sizeof(TSIParameter),-1,324864,(char*)NULL,G__setup_memvarTSIParameter,G__setup_memfuncTSIParameter);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TMRTOFMSParameter),sizeof(TMRTOFMSParameter),-1,324864,(char*)NULL,G__setup_memvarTMRTOFMSParameter,G__setup_memfuncTMRTOFMSParameter);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TSCNUnpackEvent),sizeof(TSCNUnpackEvent),-1,324864,(char*)NULL,G__setup_memvarTSCNUnpackEvent,G__setup_memfuncTSCNUnpackEvent);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_maplEpairlEintcOintgRcOintcOlesslEpairlEintcOintgRsPgRcOallocatorlEpairlEconstsPpairlEintcOintgRcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__SCNLN_White_Rabbit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TSCNUnpackProc),sizeof(TSCNUnpackProc),-1,324864,(char*)NULL,G__setup_memvarTSCNUnpackProc,G__setup_memfuncTSCNUnpackProc);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TSCNCalEvent),sizeof(TSCNCalEvent),-1,324864,(char*)NULL,G__setup_memvarTSCNCalEvent,G__setup_memfuncTSCNCalEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TSCNAnlEvent),sizeof(TSCNAnlEvent),-1,324864,(char*)NULL,G__setup_memvarTSCNAnlEvent,G__setup_memfuncTSCNAnlEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TSCNAnalysis),sizeof(TSCNAnalysis),-1,324864,(char*)NULL,G__setup_memvarTSCNAnalysis,G__setup_memfuncTSCNAnalysis);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TSCNAnlProc),sizeof(TSCNAnlProc),-1,324864,(char*)NULL,G__setup_memvarTSCNAnlProc,G__setup_memfuncTSCNAnlProc);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__SCNLN_TSCNCalProc),sizeof(TSCNCalProc),-1,324864,(char*)NULL,G__setup_memvarTSCNCalProc,G__setup_memfuncTSCNCalProc);
}
extern "C" void G__cpp_setupG__SCN(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__SCN()");
  G__set_cpp_environmentG__SCN();
  G__cpp_setup_tagtableG__SCN();

  G__cpp_setup_inheritanceG__SCN();

  G__cpp_setup_typetableG__SCN();

  G__cpp_setup_memvarG__SCN();

  G__cpp_setup_memfuncG__SCN();
  G__cpp_setup_globalG__SCN();
  G__cpp_setup_funcG__SCN();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__SCN();
  return;
}
class G__cpp_setup_initG__SCN {
  public:
    G__cpp_setup_initG__SCN() { G__add_setup_func("G__SCN",(G__incsetup)(&G__cpp_setupG__SCN)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__SCN() { G__remove_setup_func("G__SCN"); }
};
G__cpp_setup_initG__SCN G__cpp_setup_initializerG__SCN;

